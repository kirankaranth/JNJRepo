from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.libs import typed_lit
from tbl_strct_MD_INVENTORY_STOCK.config.ConfigStore import *
from tbl_strct_MD_INVENTORY_STOCK.udfs.UDFs import *

def sql_MD_MATL_MVMT_ITM(spark: SparkSession, ) -> (DataFrame):
    df1 = spark.sql(
        "select \ncast('' as string) as SRC_SYS_CD,\ncast('' as string) as MATL_MVMT_NUM,\ncast('' as string) as MATL_MVMT_YR,\ncast('' as string) as MATL_MVMT_ITM_NUM,\ncast('' as string) as MATL_MVMT_TYPE_CD,\ncast('' as string) as MATL_NUM,\ncast('' as string) as PLNT_CD,\ncast('' as string) as SLOC_CD,\ncast('' as string) as BTCH_NUM,\ncast('' as string) as STK_TYPE_CD,\ncast('' as string) as SPL_STK_TYPE_CD,\ncast('' as string) as SUPPLIER_NUM,\ncast('' as string) as CUST_NUM,\ncast('' as string) as SLS_ORDR_NUM,\ncast('' as string) as SLS_ORDR_LINE_NBR,\ncast('' as string) as DR_CR_IND,\ncast('' as decimal(18,4)) as ITM_QTY,\ncast('' as string) as BASE_UOM_CD,\ncast('' as decimal(18,4)) as ENT_UOM_QTY,\ncast('' as string) as ENT_UOM_CD,\ncast('' as string) as PO_NUM,\ncast('' as string) as PO_LINE_NBR,\ncast('' as string) as MATERIAL_MVMT_ITM_TXT,\ncast('' as string) as MFG_ORDR_NUM,\ncast('' as string) as DELV_NUM,\ncast('' as string) as DELV_LINE_NBR,\ncast('' as string) as GR_STATUS_CODE,\ncast('' as string) as GR_LINE_ID,\ncast('' as string) as EM_MATERIAL_CODE,\ncast('' as decimal(18,4)) as GR_LINE_QUANTITY,\ncast('' as string) as GR_PRICE_UOM,\ncast('' as decimal(18,4)) as GR_LINE_QTY_IN_PRICE_UOM,\ncast('' as string) as LEGAL_ENTITY_CODE,\ncast('' as string) as GR_CURRENCY_CODE,\ncast('' as string) as BTCH_IN_RSTK_USE_STK,\ncast('' as string) as BTCH_STS_KEY,\ncast('' as decimal(18,2)) as GR_LINE_SPEND_AMOUNT,\ncast('' as string) as WHSE_NUM,\ncast('' as timestamp) as PSTNG_DTTM,\ncast('' as string) as TRX_CD,\ncast('' as string) as USER_NM,\ncast('' as string) as MVMT_TYPE_TEXT,\ncast('' as string) as REF_DOC_NUM,\ncast('' as string) as SEQ_NUM_OF_ACCT_ASGNMT,\ncast('' as string) as PRCH_ORDR_UNIT_OF_MEAS,\ncast('' as string) as SLS_ORDR_NUM_OF_SLS_ORDR_STK,\ncast('' as string) as SLS_ORDR_ITM_OF_SLS_ORDR_STK,\ncast('' as string) as RSN_FOR_MVMT,\ncast('' as string) as PRFT_CTR,\ncast('' as timestamp) as ACTG_DOC_ENT_DTTM,\ncast('' as timestamp) as PSTNG_DTTM_2,\ncast('' as string) as SPLT_GUID_PART1,\ncast('' as string) as SPLT_GUID_PART2,\ncast('' as string) as SPLT_GUID_PART3,\ncast('' as string) as SPLT_GUID_PART4,\ncast('' as string) as SPLT_GUID_PART5,\ncast('' as string) as SPLT_GUID_PART6,\ncast('' as int) as DAI_ETL_ID,\ncast('' as timestamp) as DAI_CRT_DTTM,\ncast('' as timestamp) as DAI_UPDT_DTTM,\ncast('' as timestamp) as _l0_upt_,\n cast('' as timestamp) as _l1_upt_,\n cast('' as string) as _pk_md5_,\n cast('' as string) as _pk_ \n limit 0"
    )

    return df1
