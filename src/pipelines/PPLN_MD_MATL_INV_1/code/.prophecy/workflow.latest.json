{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "tai"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "tai"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_MATL_INV_1"
      },
      "connections" : [ {
        "id" : "2784a4e3-bed7-46de-b4b8-534cc2baf061",
        "source" : "3e31a2b0-3b54-4adc-9f46-abcd82de0bda",
        "sourcePort" : "b841ae9f-d92c-4137-b5dc-18bad1910e58",
        "target" : "87754eda-09fe-4d80-9a68-d235174218f4",
        "targetPort" : "2a04e2fb-5684-4c1a-8604-ef31622fe36c"
      }, {
        "id" : "7d869e2a-2a3c-4b2c-b3a1-4b7964afada5",
        "source" : "4bcf9b8b-a7be-4435-b79b-d62b8efcadf3",
        "sourcePort" : "8bf72bb1-0082-48db-bc32-983403af60a6",
        "target" : "3e31a2b0-3b54-4adc-9f46-abcd82de0bda",
        "targetPort" : "4490e314-1689-45dc-9dda-aa25dbd44551"
      } ],
      "processes" : {
        "87754eda-09fe-4d80-9a68-d235174218f4" : {
          "id" : "87754eda-09fe-4d80-9a68-d235174218f4",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_MATL_INV",
            "slug" : "MD_MATL_INV",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "2a04e2fb-5684-4c1a-8604-ef31622fe36c",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_MATL_INV"
          }
        },
        "3e31a2b0-3b54-4adc-9f46-abcd82de0bda" : {
          "id" : "3e31a2b0-3b54-4adc-9f46-abcd82de0bda",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "4490e314-1689-45dc-9dda-aa25dbd44551",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "b841ae9f-d92c-4137-b5dc-18bad1910e58",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SRC_TBL_NM',SRC_TBL_NM,'MATL_NUM',MATL_NUM,'PLNT_CD',PLNT_CD,'SLOC_CD',SLOC_CD,'BTCH_NUM',BTCH_NUM,'BTCH_STS_CD',BTCH_STS_CD,'SPCL_STCK_IND',SPCL_STCK_IND,'PRTY_NUM',PRTY_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SRC_TBL_NM',SRC_TBL_NM,'MATL_NUM',MATL_NUM,'PLNT_CD',PLNT_CD,'SLOC_CD',SLOC_CD,'BTCH_NUM',BTCH_NUM,'BTCH_STS_CD',BTCH_STS_CD,'SPCL_STCK_IND',SPCL_STCK_IND,'PRTY_NUM',PRTY_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "4bcf9b8b-a7be-4435-b79b-d62b8efcadf3" : {
          "id" : "4bcf9b8b-a7be-4435-b79b-d62b8efcadf3",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_MATL_INV",
            "slug" : "sql_MD_MATL_INV",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "8bf72bb1-0082-48db-bc32-983403af60a6",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    with mysub\nas\n(select 'MCHB' as src_tbl_nm\n, MCHB.matnr as matl_num\n, MCHB.werks as plnt_cd\n, MCHB.lgort as sloc_cd\n, MCHB.charg as btch_num\n,'#' as btch_sts_cd\n,'#' as spcl_stck_ind\n,'#' as prty_num\n, MCHB.clabs as unrstrctd_stck\n, MCHB.cumlm in_trnsfr_stck\n, MCHB.cinsm as qlty_insp_stck\n, MCHB.ceinm as rstrctd_stck\n, MCHB.cspem as blckd_stck\n, CASE WHEN MCHB.ersda = '00000000' THEN NULL\n    WHEN LENGTH(MCHB.ersda) < 8 THEN NULL\n    ELSE to_timestamp(MCHB.ersda, \\\"yyyyMMdd\\\")\nEND AS CRT_DTTM,\nMCHB.cretm as rtrns,\nnull as STO_IN_TRNST_QTY,\nnull as PLNT_IN_TRNST_QTY,\nNULL AS FISC_YR_OF_CUR_PER,\nNULL AS CUR_PER\nfrom {Config.sourceDatabase}.mchb MCHB\nwhere MCHB._deleted_ = 'F'\nUNION ALL\nselect 'MARD' as src_tbl_nm,\nMARD.matnr as matl_num,\nMARD.werks as plnt_cd,\nMARD.lgort as sloc_cd,\n'#' as btch_num,\n'#' as btch_sts_cd,\n'#' as spcl_stck_ind,\n'#' as prty_num,\nMARD.labst as unrstrctd_stck,\nMARD.umlme as in_trnsfr_stck,\nMARD.insme as qlty_insp_stck,\nMARD.einme as rstrctd_stck,\nMARD.speme as blckd_stck,\nCASE WHEN MARD.ersda = '00000000' THEN NULL\n    WHEN LENGTH(MARD.ersda) < 8 THEN NULL\n    ELSE to_timestamp(MARD.ersda, \\\"yyyyMMdd\\\")\nEND AS CRT_DTTM,\nMARD.retme as rtrns,\nnull as STO_IN_TRNST_QTY,\nnull as PLNT_IN_TRNST_QTY,\nNULL AS FISC_YR_OF_CUR_PER,\nNULL AS CUR_PER\nfrom {Config.sourceDatabase}.mard MARD\nwhere MARD._deleted_ = 'F'\n)\nselect\n  '{Config.sourceSystem}'  AS SRC_SYS_CD\n, mysub.src_tbl_nm   as SRC_TBL_NM\n, mysub.MATL_NUM     AS MATL_NUM\n, mysub.PLNT_CD      AS PLNT_CD\n, coalesce(mysub.SLOC_CD,'#')    AS SLOC_CD\n, coalesce(mysub.BTCH_NUM,'#')    AS BTCH_NUM\n, '#' AS BTCH_STS_CD\n, coalesce(mysub.SPCL_STCK_IND,'#')   AS SPCL_STCK_IND\n, coalesce(mysub.PRTY_NUM,'#')   AS PRTY_NUM\n, cast(mysub.UNRSTRCTD_STCK AS DECIMAL(18,4))  AS UNRSTRCTD_STCK\n, cast(mysub.IN_TRNSFR_STCK AS DECIMAL(18,4)) AS IN_TRNSFR_STCK\n, cast(mysub.QLTY_INSP_STCK AS DECIMAL(18,4)) AS QLTY_INSP_STCK\n, cast(mysub.RSTRCTD_STCK AS DECIMAL(18,4))    AS RSTRCTD_STCK\n, cast(mysub.BLCKD_STCK AS DECIMAL(18,4))  AS BLCKD_STCK\n, mysub.CRT_DTTM AS CRT_DTTM\n, cast(mysub.RTRNS AS DECIMAL(18,4))   AS RTRNS\n, MARA.meins  AS BASE_UOM_CD\n, null   AS STO_IN_TRNST_QTY\n, null   AS PLNT_IN_TRNST_QTY\n, cast(mysub.FISC_YR_OF_CUR_PER AS int)  AS FISC_YR_OF_CUR_PER\n, cast(mysub.CUR_PER AS int)  AS CUR_PER\nfrom mysub mysub\nLEFT JOIN {Config.sourceDatabase}.MARA MARA on MARA.MATNR = mysub.MATL_NUM AND MARA._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    