{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "p01"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "p01"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_CUST_HIER_2"
      },
      "connections" : [ {
        "id" : "d2256359-3a61-4b0c-b467-2c3e5f68b957",
        "source" : "6d569c73-5eb6-4786-be65-cdd1ef3c35cc",
        "sourcePort" : "9c9cb3b8-8424-4047-807a-b513d7daf2e8",
        "target" : "24a18812-2f15-40ae-9706-89ac6531c245",
        "targetPort" : "cd47265c-4d01-4c31-9656-15514d9b463e"
      }, {
        "id" : "d53a655c-2728-424e-b329-44a3fe59f889",
        "source" : "e026d593-6141-4a0b-ab8d-d5036b145a93",
        "sourcePort" : "a78bf0a3-232a-41b6-b9fe-a5b19c9bcf0b",
        "target" : "6d569c73-5eb6-4786-be65-cdd1ef3c35cc",
        "targetPort" : "31278f8c-741a-4fdc-963a-3c05bbdc6719"
      } ],
      "processes" : {
        "24a18812-2f15-40ae-9706-89ac6531c245" : {
          "id" : "24a18812-2f15-40ae-9706-89ac6531c245",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_CUST_HIER",
            "slug" : "MD_CUST_HIER",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "cd47265c-4d01-4c31-9656-15514d9b463e",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_CUST_HIER"
          }
        },
        "6d569c73-5eb6-4786-be65-cdd1ef3c35cc" : {
          "id" : "6d569c73-5eb6-4786-be65-cdd1ef3c35cc",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "31278f8c-741a-4fdc-963a-3c05bbdc6719",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "9c9cb3b8-8424-4047-807a-b513d7daf2e8",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'CUST_HIER_TYPE',CUST_HIER_TYPE,'CUST',CUST,'STRT_VLD_DTTM',STRT_VLD_DTTM,'SLORG',SLORG,'DSTR_CHNL',DSTR_CHNL,'DIV',DIV))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'CUST_HIER_TYPE',CUST_HIER_TYPE,'CUST',CUST,'STRT_VLD_DTTM',STRT_VLD_DTTM,'SLORG',SLORG,'DSTR_CHNL',DSTR_CHNL,'DIV',DIV)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "e026d593-6141-4a0b-ab8d-d5036b145a93" : {
          "id" : "e026d593-6141-4a0b-ab8d-d5036b145a93",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_CUST_HIER",
            "slug" : "sql_MD_CUST_HIER",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "a78bf0a3-232a-41b6-b9fe-a5b19c9bcf0b",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n  (\n    SELECT\n      SRC_SYS_CD\n    FROM\n      l1.src_sys\n    WHERE\n      SRC_SYS_CD = '{src_sys_cd}'\n      AND src_sys.Active = TRUE\n  ) AS SRC_SYS_CD,\n  TRIM(KNVH.HITYP) AS CUST_HIER_TYPE,\n  NULL AS NM,\n  TRIM(KNVH.HKUNNR) AS CUST_HI_HIER,\n  TRIM(KNVH.KUNNR) AS CUST,\n  CASE WHEN TRIM(KNVH.DATAB) = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE TO_TIMESTAMP(TRIM(KNVH.DATAB) ,\\\"yyyyMMdd\\\") END AS STRT_VLD_DTTM,\n  CASE WHEN TRIM(KNVH.DATBI) = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE TO_TIMESTAMP(TRIM(KNVH.DATBI), \\\"yyyyMMdd\\\") END AS END_VLD_DTTM,\n  TRIM(KNVH.VKORG) AS SLORG,\n  TRIM(KNVH.VTWEG) AS DSTR_CHNL,\n  TRIM(KNVH.SPART) AS DIV\nFROM\n  {Config.sourceDatabase}.KNVH\nWHERE\n  KNVH._deleted_ = 'F'\n  AND KNVH.MANDT = 020\n  \n  \n    \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    