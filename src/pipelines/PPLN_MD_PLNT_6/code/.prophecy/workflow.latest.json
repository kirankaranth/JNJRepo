{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_PLNT_6"
      },
      "connections" : [ {
        "id" : "7d24ac81-1cfd-4499-a7f3-774a3e5f46a9",
        "source" : "dd6ad017-a8b3-4356-a4d2-5e2b6221cca9",
        "sourcePort" : "d5b0e737-4eb3-447b-8f9c-f151f8102dcf",
        "target" : "87fd0f6c-8587-42b9-a812-5b13975e9eb5",
        "targetPort" : "ffc93749-a69f-425c-b7a6-f1c505b12895"
      }, {
        "id" : "5c41d8f4-9316-4525-860e-ccd23c0b60e5",
        "source" : "bb1cf2e1-93e8-4413-8d67-42afcced0113",
        "sourcePort" : "48b71d91-e0a7-46c3-ad6f-4cb8c82a170d",
        "target" : "dd6ad017-a8b3-4356-a4d2-5e2b6221cca9",
        "targetPort" : "e00be515-c7d6-4af9-8cb6-d2cca2b844de"
      } ],
      "processes" : {
        "87fd0f6c-8587-42b9-a812-5b13975e9eb5" : {
          "id" : "87fd0f6c-8587-42b9-a812-5b13975e9eb5",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_PLNT",
            "slug" : "MD_PLNT",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "ffc93749-a69f-425c-b7a6-f1c505b12895",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_PLNT"
          }
        },
        "dd6ad017-a8b3-4356-a4d2-5e2b6221cca9" : {
          "id" : "dd6ad017-a8b3-4356-a4d2-5e2b6221cca9",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "e00be515-c7d6-4af9-8cb6-d2cca2b844de",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "d5b0e737-4eb3-447b-8f9c-f151f8102dcf",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PLNT_CD',PLNT_CD))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PLNT_CD',PLNT_CD)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "bb1cf2e1-93e8-4413-8d67-42afcced0113" : {
          "id" : "bb1cf2e1-93e8-4413-8d67-42afcced0113",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_PLNT",
            "slug" : "sql_MD_PLNT",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "48b71d91-e0a7-46c3-ad6f-4cb8c82a170d",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n  '{Config.sourceSystem}'  AS SRC_SYS_CD,\n  trim(T001W.werks) AS PLNT_CD,\n  NULL AS PRTY_TYPE_CD,\n  trim(T001W.name1) AS PLNT_NM,\n  NULL AS MDM_LOC_NUM,\n  NULL AS PLNG_RLVNT_IND,\n  trim(T001W.land1) AS CTRY_CD,\n  trim(T001W.nodetype) AS PLNT_CAT_CD,\n  NULL AS ENT_PLNT_CAT_CD,\n  trim(T001W.regio) AS RGN_CD,\n  NULL AS OPER_GRP_CD,\n  NULL AS PLNT_FRAN_CD,\n  NULL AS PLNT_SITE,\n  NULL AS CURVE_ID,\n  NULL AS PLNT_ADDR,\n  NULL AS LAT_NBR,\n  NULL AS LONG_NBR,\n  TRIM(T001W.bwkey) AS VALUT_AREA,\n  TRIM(T001K.bukrs) AS CO_CD,\n  trim(T001W.fabkl) AS CAL_NUM,\n  TRIM(T005T.landx) AS CTRY_SHRT_NM,\n  trim(T001W.stras) AS ADDR_LINE_1_TXT,\n  trim(T001W.pstlz) AS PSTL_CD_NUM,\n  trim(T001W.ort01) AS CITY_NM\nFROM\n  {Config.sourceDatabase}.T001W T001W\n  LEFT JOIN {Config.sourceDatabase}.T001K T001K ON T001W.BWKEY = T001K.BWKEY\n  AND T001K._deleted_ = 'F'\n  AND T001K.MANDT = (SELECT L1_PARAMETERS.PARAM_VAL from l1_md_prophecy_config.l1_parameters L1_PARAMETERS WHERE L1_PARAMETERS.ENV_NM = '{env}' AND L1_PARAMETERS.PARAM_NM = 'mandt_filter')\n  LEFT JOIN {Config.sourceDatabase}.T005T T005T ON T001W.LAND1 = T005T.LAND1\n  AND T005T.SPRAS = 'E'\n  AND T005T._deleted_ = 'F'\n  AND T005T.MANDT = (SELECT L1_PARAMETERS.PARAM_VAL from l1_md_prophecy_config.l1_parameters L1_PARAMETERS WHERE L1_PARAMETERS.ENV_NM = '{env}' AND L1_PARAMETERS.PARAM_NM = 'mandt_filter')\nWHERE\n  T001W._deleted_ = 'F'\n  AND T001W.MANDT = (SELECT L1_PARAMETERS.PARAM_VAL from l1_md_prophecy_config.l1_parameters L1_PARAMETERS WHERE L1_PARAMETERS.ENV_NM = '{env}' AND L1_PARAMETERS.PARAM_NM = 'mandt_filter')  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    