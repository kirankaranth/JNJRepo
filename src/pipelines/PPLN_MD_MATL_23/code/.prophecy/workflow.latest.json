{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_MATL_23"
      },
      "connections" : [ {
        "id" : "37b2c06c-481d-4047-bc04-c6be41fb7a80",
        "source" : "47873a28-a957-4116-b74b-3d1b77e8f245",
        "sourcePort" : "bb539087-e214-44b1-b59f-5b4b88affd90",
        "target" : "d6a7c8d0-4acf-41eb-bf6f-89fd0d091d3b",
        "targetPort" : "a1fe1621-e28c-461e-a0f6-e63f96a64719"
      }, {
        "id" : "d763472b-8161-4877-8db1-83c4b87dff76",
        "source" : "9a0e4627-b5ab-49ba-9b06-1556256051a8",
        "sourcePort" : "d578cca2-2672-42df-832e-d6651ce88f31",
        "target" : "47873a28-a957-4116-b74b-3d1b77e8f245",
        "targetPort" : "6ccc6172-a8eb-447a-81c4-811d31b76432"
      } ],
      "processes" : {
        "d6a7c8d0-4acf-41eb-bf6f-89fd0d091d3b" : {
          "id" : "d6a7c8d0-4acf-41eb-bf6f-89fd0d091d3b",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_MATL",
            "slug" : "MD_MATL",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "a1fe1621-e28c-461e-a0f6-e63f96a64719",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_MATL"
          }
        },
        "47873a28-a957-4116-b74b-3d1b77e8f245" : {
          "id" : "47873a28-a957-4116-b74b-3d1b77e8f245",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "6ccc6172-a8eb-447a-81c4-811d31b76432",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "bb539087-e214-44b1-b59f-5b4b88affd90",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "9a0e4627-b5ab-49ba-9b06-1556256051a8" : {
          "id" : "9a0e4627-b5ab-49ba-9b06-1556256051a8",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_MATL",
            "slug" : "sql_MD_MATL",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "d578cca2-2672-42df-832e-d6651ce88f31",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    with cte_mandt_filter AS\n(\n select param_val\n    from l1_md_prophecy_config.l1_parameters l1_parameters\n    WHERE l1_parameters.env_nm = '{env}' AND l1_parameters.param_nm = 'mandt_filter'\n),\ncte_atwrt AS (\n  SELECT\n    objek,\n    BRAVO_MINOR_CODE,\n    STERILE,\n    TYPE_OF_MATERIAL,\n NDL_SLS_TYPE,\n    SUTURE_LENGTH_INCH,\n NDL_COLOR,\n    NDL_ALLOY,\n    SUTURE_USP\n  FROM\n    (\n      SELECT\n        inob.objek,\n        ausp.atwrt,\n        cabn.atnam\n      FROM\n        {Config.sourceDatabase}.inob\n        INNER JOIN {Config.sourceDatabase}.ausp ON ausp.objek = LPAD(INOB.CUOBJ, 18, '0')\n        AND ausp.MANDT = inob.MANDT\n        AND ausp._deleted_ = 'F'\n        INNER JOIN {Config.sourceDatabase}.cabn ON cabn.atinn = ausp.atinn\n        AND cabn.mandt = ausp.mandt\n        AND cabn._deleted_ = 'F'\n      WHERE\n        inob.obtab = 'MARA'\n        AND inob.klart = '001'\n        AND inob.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n        AND UPPER(cabn.atnam) IN ('BRAVO_MINOR_CODE', 'STERILE', 'TYPE_OF_MATERIAL','NDL_SLS_TYPE','SUTURE_LENGTH_INCH','NDL_COLOR','NDL_ALLOY','SUTURE_USP')\n        AND inob._deleted_ = 'F'\n    ) PIVOT(\n      MAX(atwrt) FOR atnam IN (\n        'BRAVO_MINOR_CODE' AS BRAVO_MINOR_CODE,\n        'STERILE' AS STERILE,\n        'TYPE_OF_MATERIAL' AS TYPE_OF_MATERIAL,\n  'NDL_SLS_TYPE' AS NDL_SLS_TYPE,\n        'SUTURE_LENGTH_INCH' AS SUTURE_LENGTH_INCH,\n        'NDL_COLOR' AS NDL_COLOR,\n        'NDL_ALLOY' AS NDL_ALLOY,\n        'SUTURE_USP' AS SUTURE_USP\n      )\n    )\n)\nselect\n  *\nfrom\n  (\n    select\n      ('{Config.sourceSystem}') AS SRC_SYS_CD,\n      MARA.matnr AS MATL_NUM,\n      TRIM(MARA.mtart) AS MATL_TYPE_CD,\n      TRIM(MARA.brand_id) AS BRND_CD,\n      TRIM(MARA.spart) AS FRANCHISE_CD,\n      TRIM(MARA.labor) AS LCL_PLNG_SUB_FRAN_CD,\n      TRIM(MARA.ekwsl) AS PRCHSNG_VAL_KEY_CD,\n      TRIM(MARA.lvorm) AS DEL_IND,\n      TRIM(MARA.matkl) AS MATL_GRP_CD,\n      TRIM(MARA.mbrsh) AS INDSTR_SECTR_CD,\n      TRIM(MARA.meins) AS BASE_UOM_CD,\n      CAST(TRIM(MARA.mhdhb) AS DECIMAL(18, 4)) AS TOT_SHLF_LIF_DAYS_CNT,\n      CAST(TRIM(MARA.mhdrz) AS DECIMAL(18, 4)) AS MIN_SHLF_RMN_LIF_DAYS_CNT,\n      TRIM(MARA.mstae) AS MATL_STS_CD,\n      TRIM(MARA.mstav) AS DSTN_CHN_STS_CD,\n      CAST(TRIM(MARA.ntgew) AS DECIMAL(18, 4)) AS NET_WT_MEAS,\n      TRIM(MARA.prdha) AS PROD_HIER_CD,\n      TRIM(MARA.qmpur) AS PRCMT_QUAL_MGMT_IND,\n      TRIM(MARA.raube) AS STRG_CONDS_CD,\n      TRIM(MARA.tempb) AS LBL_TEMP_RNG,\n      TRIM(MARA.tragr) AS TRSPN_GRP_CD,\n      TRIM(MARA.xchpf) AS BTCH_MNG_IND,\n      TRIM(MARA.zeinr) AS MATL_DOC_NUM,\n      TRIM(MARA.zeivr) AS MATL_DOC_VERS_NUM,\n      TRIM(MAKT.maktx) AS MATL_SHRT_DESC,\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      TRIM(MARA.mtpos_mara) AS MATL_CAT_GRP_CD,\n      \n      \n      \n      TRIM(MARA.aenam) AS CHG_BY,\n      TRIM(MARA.aeszn) AS DOC_CHG_NUM,\n      TRIM(MARA.behvo) AS CNTNR_REQ,\n      TRIM(MARA.bismt) AS OLD_MATL_NUM,\n      CAST(TRIM(MARA.brgew) AS DECIMAL(18, 4)) AS GRS_WT,\n      TRIM(MARA.bstme) AS ORDR_UNIT_PUR_UOM,\n      TRIM(MARA.chml_cmplnc_rlvnce_ind) AS CHEM_CMPLI,\n      TRIM(MARA.ernam) AS CRT_BY,\n      CASE\n        WHEN MARA.ersda = '00000000' THEN CAST(\n        ELSE TO_TIMESTAMP(MARA.ersda, 'yyyyMMdd')\n      END AS CRT_ON_DTTM,\n      TRIM(MARA.etiar) AS LBL_TYPE,\n      TRIM(MARA.etifo) AS LBL_FORM,\n      TRIM(MARA.extwg) AS EXTRNL_MATL_GRP,\n      TRIM(MARA.fuelg) AS MAX_LVL,\n      TRIM(MARA.gewei) AS WT_UNIT,\n      TRIM(MARA.groes) AS SIZE_DIM,\n      TRIM(MARA.iprkz) AS PER_IN,\n   CASE\n  WHEN MARA.laeda = '00000000' OR MARA.last_changed_time = '00000000' THEN CAST(\n  ELSE  to_timestamp(concat(MARA.laeda, MARA.last_changed_time), 'yyyyMMddHHmmss')\n   END AS LAST_CHG_DT_TIME_DTTM,\n      TRIM(MARA.magrv) AS MATL_GRP_PKGNG_MATL,\n      TRIM(MARA.matnr_external) AS MATL_EXTRNL,\n      TRIM(MARA.mhdlp) AS STRG_PCT,\n      CASE\n        WHEN MARA.mstde = '00000000' THEN CAST(\n        ELSE TO_TIMESTAMP(MARA.mstde, 'yyyyMMdd')\n      END AS VAL_FROM_XPLNT_DTTM,\n      CASE\n        WHEN MARA.mstdv = '00000000' THEN CAST(\n        ELSE TO_TIMESTAMP(MARA.mstdv, 'yyyyMMdd')\n      END AS VAL_FROM_XDC_DTTM,\n      TRIM(MARA.normt) AS INDSTR_STD_DESC,\n      TRIM(MARA.rdmhd) AS RD_RUL_SLED,\n      TRIM(MARA.serlv) AS SER_LVL,\n      TRIM(MARA.stoff) AS MATL_HAZ_CD,\n      TRIM(MARA.vabme) AS VAR_ORDR_UNT,\n      TRIM(MARA.vhart) AS PKGNG_MATL_TYPE,\n      TRIM(MARA.voleh) AS VOL_UNIT,\n      CAST(TRIM(MARA.volum) AS DECIMAL(18, 4)) AS VOL,\n      TRIM(MARA.wrkst) AS BSC_MATL,\n      TRIM(MARA.zeiar) AS DOC_TYPE,\n      TRIM(MARA.zeifo) AS DOC_PG_FMT,\n      TRIM(MARA.ean11) AS EAN_UPC,\n      TRIM(MARA.numtp) AS EAN_CAT,\n      TRIM(MARA.msbookpartno) AS MFR_BOOK_PART_NUM,\n      TRIM(MARA.zz1_direct_ship_flag_prd) AS DIR_SHP_FL,\n      TRIM(MARA.zz1_finish_plant_prd) AS FIN_PLNT,\n      TRIM(MARA.zz1_main_storage_loc_prd) AS MAIN_STRG_LOC,\n      TRIM(MARA.zz1_pcs_sales_unit_prd) AS PCS_PER_SLS_UNT,\n      TRIM(MARA.zz1_product_line_prd) AS PROD_LINE,\n      TRIM(MARA.zz1_pur_mfg_ind_prd) AS MAKE_BUY_IN,\n      TRIM(MARA.zz1_start_plant_prd) AS STRT_PLNT,\n      TRIM(MAKT.maktg) AS MATL_SHRT_DESC_UP_CASE,\n      TRIM(T134T.mtbez) AS MATL_TYPE_DESC,\n      TRIM(TSPAT.vtext) AS FRAN_CD_DESC,\n      TRIM(T006A.msehl) AS BASE_UOM_DESC,\n      TRIM(INOB.objek) AS OBJ_NUM,\n      TRIM(cte_atwrt.TYPE_OF_MATERIAL) as TYPE_OF_MATERIAL,\n      TRIM(cte_atwrt.STERILE) as STERILE,\n      TRIM(cte_atwrt.BRAVO_MINOR_CODE) as BRAVO_MINOR_CODE,\n   \n   TRIM(cte_atwrt.NDL_SLS_TYPE) as NDL_SLS_TYPE,\n    TRIM(cte_atwrt.SUTURE_LENGTH_INCH) as SUTURE_LENGTH_INCH,\n   CAST(TRIM(MARA._STTPEC_SERTYPE) AS INT) AS SER_TYPE,\n   TRIM(MARA.GTIN_VARIANT) AS GTIN_VRNT,\n   \n   \n   '#' AS SHRT_MATL_NUM,\n   TRIM(MARA.commodity) as CMMDTY,\n   TRIM(cte_atwrt.NDL_COLOR) as NDL_COLOR,\n    TRIM(cte_atwrt.NDL_ALLOY) as NDL_ALLOY,\n    TRIM(cte_atwrt.SUTURE_USP) as SUTURE_USP,\n CASE\n       WHEN (LENGTH(TRIM(MARA.EAN11)) > 0 AND LENGTH(TRIM(MARA.EAN11)) < 14) THEN LPAD(TRIM(MARA.EAN11), 14, 0)\n       ELSE TRIM(MARA.EAN11)\n    END AS EAN_UPC_HRMZD\n    FROM\n      {Config.sourceDatabase}.MARA MARA\n      left join (\n        select\n          trim(MAKT.MAKTX) as MAKTX,\n          TRIM(MAKT.maktg) as MAKTG,\n          MAKT.MATNR as MATNR\n        from\n          {Config.sourceDatabase}.MAKT MAKT\n        where\n          MAKT.SPRAS = \\\"E\\\"\n          AND MAKT.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n          AND MAKT._deleted_ = 'F'\n      ) MAKT on MARA.MATNR = MAKT.MATNR\n      left join\n          {Config.sourceDatabase}.INOB INOB on MARA.MATNR = INOB.OBJEK\n        AND\n          INOB.KLART = 001\n          AND INOB.OBTAB='MARA'\n          AND INOB._deleted_ = 'F'\n          AND INOB.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n      left join (\n        select\n          T134T.mtbez as mtbez,\n          T134T.MTART as MTART\n        from\n          {Config.sourceDatabase}.T134T T134T\n        where\n          T134T.SPRAS = \\\"E\\\"\n          AND T134T.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n          AND T134T._deleted_ = 'F'\n      ) T134T on MARA.MTART = T134T.MTART\n      left join (\n        select\n          TSPAT.vtext as vtext,\n          TSPAT.SPART as SPART\n        from\n          {Config.sourceDatabase}.TSPAT TSPAT\n        where\n          TSPAT.SPRAS = \\\"E\\\"\n          AND TSPAT.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n          AND TSPAT._deleted_ = 'F'\n      ) TSPAT on MARA.SPART = TSPAT.SPART\n      left join (\n        select\n          T006A.msehl as msehl,\n          T006A.MSEHI as MSEHI\n        from\n          {Config.sourceDatabase}.T006A T006A\n        where\n          T006A.SPRAS = \\\"E\\\"\n          AND T006A.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n          AND T006A._deleted_ = 'F'\n      ) T006A on MARA.MEINS = T006A.MSEHI\n      left join cte_atwrt on MARA.MATNR = cte_atwrt.OBJEK\n    WHERE\n      MARA.MANDT IN ( SELECT param_val FROM cte_mandt_filter)\n      AND MARA._deleted_ = 'F'\n  )  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    