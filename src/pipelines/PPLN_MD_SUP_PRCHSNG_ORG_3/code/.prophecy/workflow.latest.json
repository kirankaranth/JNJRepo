{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "bw2"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "bw2"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_SUP_PRCHSNG_ORG_3"
      },
      "connections" : [ {
        "id" : "e6602a38-483c-4be2-8ed4-a910ce6884d4",
        "source" : "4349c21d-8d27-4e55-b74f-2fbac5121523",
        "sourcePort" : "17ec0a8e-819e-438b-91e6-f229042180ba",
        "target" : "76593b01-76d5-42d0-8173-ce4d7549b995",
        "targetPort" : "1f3633b3-9dc5-4d1a-bbfd-cb655642d052"
      }, {
        "id" : "11ec13c7-083f-41cf-b8cd-76ff79ed8478",
        "source" : "0c1cb3eb-1f4c-4321-95c8-1702849d070c",
        "sourcePort" : "13e82013-177b-4348-98ae-78a67cc36b27",
        "target" : "4349c21d-8d27-4e55-b74f-2fbac5121523",
        "targetPort" : "8a93da75-c67a-4e7c-8833-d6dfef19e5a8"
      } ],
      "processes" : {
        "76593b01-76d5-42d0-8173-ce4d7549b995" : {
          "id" : "76593b01-76d5-42d0-8173-ce4d7549b995",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_SUP_PRCHSNG_ORG",
            "slug" : "MD_SUP_PRCHSNG_ORG",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "1f3633b3-9dc5-4d1a-bbfd-cb655642d052",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_SUP_PRCHSNG_ORG"
          }
        },
        "4349c21d-8d27-4e55-b74f-2fbac5121523" : {
          "id" : "4349c21d-8d27-4e55-b74f-2fbac5121523",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "8a93da75-c67a-4e7c-8833-d6dfef19e5a8",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "17ec0a8e-819e-438b-91e6-f229042180ba",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SUP_NUM',SUP_NUM,'PRCHSNG_ORG_NUM',PRCHSNG_ORG_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SUP_NUM',SUP_NUM,'PRCHSNG_ORG_NUM',PRCHSNG_ORG_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "0c1cb3eb-1f4c-4321-95c8-1702849d070c" : {
          "id" : "0c1cb3eb-1f4c-4321-95c8-1702849d070c",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_SUP_PRCHSNG_ORG",
            "slug" : "sql_MD_SUP_PRCHSNG_ORG",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "13e82013-177b-4348-98ae-78a67cc36b27",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n    '{Config.sourceSystem}'   AS SRC_SYS_CD,\nF0401_adt.A6AN8 AS SUP_NUM,\nNULL AS PRCHSNG_ORG_NUM,\nCASE WHEN LOWER(TRIM(a6upmj)) = 'null' OR TRIM(a6upmj) = '' OR TRIM(a6upmj) = '0' THEN NULL ELSE to_timestamp(substr(CAST(date_add(concat(substr(CAST(CAST(TRIM(a6upmj) AS INT) + 1900000 AS STRING),1,4),'-01-01'), CAST(substr(CAST(CAST(TRIM(a6upmj) AS INT) + 1900000 AS string),5) AS INT )-1) AS STRING), 1, 10),'yyyy-MM-dd') END AS CRT_ON_DTTM,\nNULL AS PRCH_BLK_IND,\nNULL AS DEL_IND,\nTRIM(F0401_adt.A6CRRP) AS CRNCY_CD,\nNULL AS PMT_TERM_CD,\nTRIM(F0401_adt.A6FRTH) AS INCOTERM1_CD,\nF0101_adt.ABMCU AS INCOTERM2_CD,\nNULL AS PRC_PCDR_CD,\nNULL AS PRC_CNTL_CD,\nTRIM(F0401_adt.A6AVCH) AS EVAL_RCPT_SETLM_CD,\nNULL AS RTRN_VEND_IND,\nNULL AS CNFRM_CD,\nNULL AS NM_OF_PRSN_RESP_CREAT_OBJ,\nNULL AS GR_BAS_INVC_VERIF,\nNULL AS AUTO_GNR_OF_PO_ALLW,\nNULL AS AUTO_EVAL_RCPT_SETLM,\nNULL AS OWN_EXPLN_OF_TERM_OF_PMT,\nNULL AS SHIPPING_COND_CD\nFROM {Config.sourceDatabase}.F0401_adt F0401_adt\nLEFT JOIN {Config.sourceDatabase}.F0101_adt F0101_adt ON F0401_adt.A6AN8=F0101_adt.ABAN8 AND F0101_adt._deleted_ = 'F'\nWHERE F0401_adt._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    