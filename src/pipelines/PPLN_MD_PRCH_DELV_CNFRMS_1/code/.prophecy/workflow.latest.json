{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "hcs"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "hcs"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_PRCH_DELV_CNFRMS_1"
      },
      "connections" : [ {
        "id" : "7bb690e7-0a4c-4b0a-a695-bb72db44ead6",
        "source" : "a67b48d8-03ed-4ba5-956c-351cdde154a9",
        "sourcePort" : "a632e97f-0f05-4f7e-8c27-02f829c04b38",
        "target" : "559c9b5f-6c08-4c77-ba8a-d18e582b6eca",
        "targetPort" : "712169bb-7a44-40af-a0e4-51e7b858d46d"
      }, {
        "id" : "baa47b0b-072b-431a-8a95-c305667bb3b0",
        "source" : "29c0e482-1bf0-4d20-bfe8-fe422762942c",
        "sourcePort" : "bf811a64-302e-486a-8a16-a4b4806a24ef",
        "target" : "a67b48d8-03ed-4ba5-956c-351cdde154a9",
        "targetPort" : "d0297996-cb0e-4128-96c5-d1e2bd7b7592"
      } ],
      "processes" : {
        "559c9b5f-6c08-4c77-ba8a-d18e582b6eca" : {
          "id" : "559c9b5f-6c08-4c77-ba8a-d18e582b6eca",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_PRCH_DELV_CNFRMS",
            "slug" : "MD_PRCH_DELV_CNFRMS",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "712169bb-7a44-40af-a0e4-51e7b858d46d",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_PRCH_DELV_CNFRMS"
          }
        },
        "a67b48d8-03ed-4ba5-956c-351cdde154a9" : {
          "id" : "a67b48d8-03ed-4ba5-956c-351cdde154a9",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "d0297996-cb0e-4128-96c5-d1e2bd7b7592",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "a632e97f-0f05-4f7e-8c27-02f829c04b38",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "29c0e482-1bf0-4d20-bfe8-fe422762942c" : {
          "id" : "29c0e482-1bf0-4d20-bfe8-fe422762942c",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_PRCH_DELV_CNFRMS",
            "slug" : "sql_MD_PRCH_DELV_CNFRMS",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "bf811a64-302e-486a-8a16-a4b4806a24ef",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n  '{Config.sourceSystem}'  AS SRC_SYS_CD,\n  TRIM(EKES.ebeln) AS PO_NUM,\n  TRIM(EKES.ebelp) AS PO_LINE_NBR,\n  CAST(TRIM(EKES.etens) AS INT) AS CNFRM_SEQ_NBR,\n  TRIM(EKES.ebtyp) AS CNFRM_CAT_CD,\n  CASE\n    WHEN TRIM(EKES.eindt) = '00000000' THEN NULL\n    ELSE TO_TIMESTAMP(TRIM(EKES.eindt), \\\"yyyyMMdd\\\")\n  END AS DELV_DTTM,\n  CASE\n    WHEN TRIM(EKES.erdat) = '00000000' THEN NULL\n    ELSE TO_TIMESTAMP(TRIM(EKES.erdat), \\\"yyyyMMdd\\\")\n  END AS CRT_ON_DTTM,\n  CAST (TRIM(EKES.menge) AS DECIMAL(18, 4)) AS CNFRM_QTY,\n  CAST (TRIM(EKES.dabmg) AS DECIMAL(18, 4)) AS MRP_ADJ_QTY,\n  TRIM(EKES.vbeln) AS SLS_ORDR_NUM,\n  TRIM(EKES.vbelp) AS SLS_ORDR_LINE_NBR,\n  TRIM(EKES.charg) AS VEND_BTCH_NUM,\n  NULL AS REF_DOC_NUM,\n  '#' AS CO_CD,\n  '#' AS ORDER_SUF\nFROM\n  {Config.sourceDatabase}.EKES EKES\nWHERE\n  EKES._deleted_ = 'F'\n  \n  \n  \n\n  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    