{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "dev_md_l1"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "mec"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "mec"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MES_MD_ETH_RSRS_TYPE_1"
      },
      "connections" : [ {
        "id" : "0d8cd4b4-1ec6-496e-9c3f-c03a7b85529e",
        "source" : "2810e355-7f84-49de-88e0-60149920f709",
        "sourcePort" : "4075f7ae-a8bc-4c1a-9a1b-276db64d779e",
        "target" : "f0044c4b-3851-44f3-8266-356e24f00f5b",
        "targetPort" : "a33c050e-a8e4-4dec-bc74-1bb8c59b4bc0"
      }, {
        "id" : "515ba543-2993-4048-b36c-8aaf5687f76a",
        "source" : "4f1abeaf-ad41-4040-bf2d-c2d6cddfa3b0",
        "sourcePort" : "0a5972f3-e5d3-4b3b-9ca4-2fabba391b39",
        "target" : "2810e355-7f84-49de-88e0-60149920f709",
        "targetPort" : "29073ecc-b8e9-48bd-aef2-c110ab92980e"
      } ],
      "processes" : {
        "f0044c4b-3851-44f3-8266-356e24f00f5b" : {
          "id" : "f0044c4b-3851-44f3-8266-356e24f00f5b",
          "component" : "Target",
          "metadata" : {
            "label" : "MES_MD_ETH_RSRS_TYPE",
            "slug" : "MES_MD_ETH_RSRS_TYPE",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "a33c050e-a8e4-4dec-bc74-1bb8c59b4bc0",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MES_MD_ETH_RSRS_TYPE"
          }
        },
        "2810e355-7f84-49de-88e0-60149920f709" : {
          "id" : "2810e355-7f84-49de-88e0-60149920f709",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "29073ecc-b8e9-48bd-aef2-c110ab92980e",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "4075f7ae-a8bc-4c1a-9a1b-276db64d779e",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'ETH_RSRS_TYPE_ID',ETH_RSRS_TYPE_ID))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'ETH_RSRS_TYPE_ID',ETH_RSRS_TYPE_ID)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "4f1abeaf-ad41-4040-bf2d-c2d6cddfa3b0" : {
          "id" : "4f1abeaf-ad41-4040-bf2d-c2d6cddfa3b0",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MES_MD_ETH_RSRS_TYPE",
            "slug" : "sql_MES_MD_ETH_RSRS_TYPE",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "0a5972f3-e5d3-4b3b-9ca4-2fabba391b39",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    select \n  '{Config.sourceSystem}' as SRC_SYS_CD\n  ,trim(EthResourceType.ethresourcetypeid) as ETH_RSRS_TYPE_ID\n  ,trim(EthResourceType.associatedpackages) as ASSCTD_PKGS_TXT\n  ,cast(EthResourceType.CHANGECOUNT as int) as CHG_CNT\n  ,trim(EthResourceType.changehistoryid) as CHG_HIST_ID\n  ,trim(EthResourceType.ethresourcetypename) as ETH_RSRS_TYPE_NM\n  ,trim(EthResourceType.description) as ETH_RSRS_TYPE_DESC\n  ,trim(EthResourceType.iconid) as ICON_ID\n  ,cast(trim(EthResourceType.instancelocked) as boolean) as INST_LOCK_IND\n  ,cast(trim(EthResourceType.isfrozen) as boolean) as IS_FRZN_IND\n  ,trim(EthResourceType.notes) as NOTES_TXT\n  ,trim(EthResourceType.cdotypeid) as OBJ_TYPE_ID\nfrom {Config.sourceDatabase}.EthResourceType\nWHERE EthResourceType._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    