{
  "metainfo" : {
    "id" : "1",
    "language" : "python",
    "fabricId" : "32",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "python",
      "udfs" : [ ],
      "functionPackageName" : "cdl_l1_team.cdl_md_l1.functions",
      "sharedFunctionPackageNames" : [ ]
    },
    "udafs" : {
      "language" : "python",
      "code" : ""
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "targetSchema",
          "kind" : {
            "type" : "string",
            "value" : "dev_md_l1"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false
        }, {
          "name" : "sourceSystem",
          "kind" : {
            "type" : "string",
            "value" : "jes"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false
        }, {
          "name" : "sourceDatabase",
          "kind" : {
            "type" : "string",
            "value" : "jes"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false
        }, {
          "name" : "MANDT",
          "kind" : {
            "type" : "string",
            "value" : ""
          },
          "optional" : true,
          "isWorkflowNodeConfiguration" : false
        }, {
          "name" : "DAI_ETL_ID",
          "kind" : {
            "type" : "int",
            "value" : "0"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "MD_SUP_13",
    "configurationVersion" : "v1"
  },
  "connections" : [ {
    "id" : "e37e8685-1f0d-4b6a-acdb-e4aaaf6a48d9",
    "source" : "85316c5e-39cf-4c7e-9325-bee7adad73c4",
    "sourcePort" : "975c4675-1ba6-4548-a026-a1b5f1834616",
    "target" : "e5a27a3c-0dc5-4338-8c84-281a4540b59c",
    "targetPort" : "936f6373-6648-43a2-854f-7ee11313b1c4"
  }, {
    "id" : "6c83c1ed-5c94-49ff-93c8-28579cba92e7",
    "source" : "b1b16ee7-171a-49b4-90dc-d83d833d0dec",
    "sourcePort" : "292f5365-2df5-4347-8b3f-7fea458e0abe",
    "target" : "85316c5e-39cf-4c7e-9325-bee7adad73c4",
    "targetPort" : "9121e0d1-5923-43e5-9779-5684ad12e741"
  } ],
  "processes" : {
    "e5a27a3c-0dc5-4338-8c84-281a4540b59c" : {
      "id" : "e5a27a3c-0dc5-4338-8c84-281a4540b59c",
      "component" : "Target",
      "metadata" : {
        "label" : "MD_SUP",
        "slug" : "MD_SUP",
        "x" : -540,
        "y" : -400,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "936f6373-6648-43a2-854f-7ee11313b1c4",
          "slug" : "in0"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "datasetId" : "datasets/MD_SUP"
      }
    },
    "85316c5e-39cf-4c7e-9325-bee7adad73c4" : {
      "id" : "85316c5e-39cf-4c7e-9325-bee7adad73c4",
      "component" : "SchemaTransform",
      "metadata" : {
        "label" : "addL1fields",
        "slug" : "addL1fields",
        "x" : -780,
        "y" : -400,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "9121e0d1-5923-43e5-9779-5684ad12e741",
          "slug" : "in0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "_deleted_",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "975c4675-1ba6-4548-a026-a1b5f1834616",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "transformations" : [ {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "SRC_SYS_CD",
            "expression" : {
              "format" : "sql",
              "expression" : "'$sourceSystem'"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "_pk_",
            "expression" : {
              "format" : "sql",
              "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SUP_NUM',SUP_NUM))"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "_pk_md5_",
            "expression" : {
              "format" : "sql",
              "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'SUP_NUM',SUP_NUM)))"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "_l1_upt_",
            "expression" : {
              "format" : "sql",
              "expression" : "current_timestamp()"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "DAI_ETL_ID",
            "expression" : {
              "format" : "sql",
              "expression" : "'$DAI_ETL_ID'"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "DAI_CRT_DTTM",
            "expression" : {
              "format" : "sql",
              "expression" : "current_timestamp()"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        }, {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "DAI_UPDT_DTTM",
            "expression" : {
              "format" : "sql",
              "expression" : "current_timestamp()"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        } ]
      }
    },
    "b1b16ee7-171a-49b4-90dc-d83d833d0dec" : {
      "id" : "b1b16ee7-171a-49b4-90dc-d83d833d0dec",
      "component" : "Script",
      "metadata" : {
        "label" : "sql_MD_SUP",
        "slug" : "sql_MD_SUP",
        "x" : -1060,
        "y" : -400,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "292f5365-2df5-4347-8b3f-7fea458e0abe",
          "slug" : "out0",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "_deleted_",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : true
      },
      "properties" : {
        "script" : "out0 = spark.sql(f\"\"\"\n    with cte as (\n    SELECT\n        ROW_NUMBER() OVER (partition by f0401.a6an8 ORDER BY f0116_adt.aleftb desc) row,\n        '{Config.sourceSystem}' AS SRC_SYS_CD,\n        f0401.a6an8 AS SUP_NUM,\n        TRIM(f0101_adt.abalph) AS SUP_NM1,\n        CAST(NULL AS STRING) AS SUP_NM2,\n        CAST(NULL AS STRING) AS SUP_NM3,\n        CAST(NULL AS STRING) AS SUP_NM4,\n        CAST(NULL AS STRING) AS SUP_SHRT_NM,\n        TRIM(f0116_adt.alctr) AS CTRY_CD,\n        CAST(NULL AS STRING) AS TAX_JURIS_CD,\n        CAST(NULL AS STRING) AS TRSPN_ZN_CD,\n        TRIM(f0116_adt.alcty1) AS CITY_NM,\n        TRIM(f0116_adt.aladd4) AS DSTRC_NM,\n        CAST(NULL AS STRING) AS PSTL_BOX_CD,\n        CAST(NULL AS STRING) AS PSTL_BOX_PSTL_CD_NUM,\n        TRIM(f0116_adt.aladdz) AS PSTL_CD_NUM,\n        TRIM(f0116_adt.aladds) AS RGN_NM,\n        TRIM(f0116_adt.aladd1) AS ADDR_LINE_1_TXT,\n        CAST(NULL AS STRING) AS CTRY_SHRT_NM,\n        CAST(NULL AS STRING) AS ADDR_NUM,\n        CAST(NULL AS STRING) AS GLN1_NBR,\n        CAST(NULL AS STRING) AS SGMNT_CD,\n        CASE\n          WHEN LOWER(TRIM(f0401.a6upmj)) = 'CAST(NULL AS STRING)' OR TRIM(f0401.a6upmj) = '' OR TRIM(f0401.a6upmj) = '0' THEN CAST(NULL AS STRING)\n          ELSE TO_TIMESTAMP(substr(CAST(DATE_ADD(CONCAT(SUBSTR(CAST(CAST(TRIM(f0401.a6upmj) AS INT) + 1900000 AS STRING), 1, 4), '-01-01'), CAST(SUBSTR(CAST(CAST(TRIM(f0401.a6upmj) AS INT) + 1900000 AS string), 5) AS INT ) -1)\n          AS STRING), 1, 10),'yyyy-MM-dd')\n        END AS CRT_ON_DTTM,\n        TRIM(f0101_adt.abat1) AS SUP_TYPE_CD,\n        TRIM(f0101_adt.aban8) AS CUST_NUM,\n        CAST(NULL AS STRING) AS ALT_PAYEE_NUM,\n        CAST(NULL AS STRING) AS DEL_IND,\n        CAST(NULL AS STRING) AS PSTNG_BLK_IND,\n        CAST(NULL AS STRING) AS PRCH_BLK_IND,\n        CAST(NULL AS STRING) AS TAX_NUM1,\n        CAST(NULL AS STRING) AS TAX_NUM2,\n        CAST(NULL AS STRING) AS ONE_TIME_ACCT_IND,\n        CAST(NULL AS STRING) AS TRAD_PTNR_CO_CD,\n        TRIM(f0101_adt.abtax) AS VAT_NUM,\n        CAST(NULL AS STRING) AS NTRL_PRSN_IND,\n        CAST(NULL AS STRING) AS PLNT_CD,\n        CAST(NULL AS STRING) AS PMT_BLK_IND,\n        CAST(NULL AS STRING) AS STD_CARR_ACCS_CD,\n        CAST(NULL AS STRING) AS TAX_TYPE_CD,\n        CAST(NULL AS STRING) AS TAX_NUM_TYPE_CD,\n        TRIM(f0101_adt.abtx2) AS TAX_NUM3,\n        CAST(NULL AS STRING) AS GLN2_NBR,\n        CAST(NULL AS STRING) AS TAX_NUM4,\n        CAST(NULL AS STRING) AS TAX_NUM5,\n        CAST(NULL AS STRING) AS GLN3_NBR,\n        CAST(NULL AS STRING) AS BLOK_SUP_IND,\n        CAST(NULL AS STRING) AS POD_IND,\n        TRIM(f0101_adt.abalky) AS EXTRNL_MFR_CD,\n        f0401._upt_ as _l0_upt_\n    FROM {Config.sourceDatabase}.f0401 f0401\n LEFT JOIN {Config.sourceDatabase}.f0101_adt f0101_adt on f0401.a6an8=f0101_adt.aban8 AND f0101_adt._deleted_ = 'F'\n LEFT JOIN {Config.sourceDatabase}.f0116_adt f0116_adt on f0401.a6an8=f0116_adt.alan8 AND f0116_adt._deleted_ = 'F'\n WHERE f0401._deleted_ = 'F'\n)\nSELECT \n    cte.SRC_SYS_CD, \n    cte.SUP_NUM, \n    cte.SUP_NM1, \n    cte.SUP_NM2, \n    cte.SUP_NM3, \n    cte.SUP_NM4, \n    cte.SUP_SHRT_NM, \n    cte.CTRY_CD, \n    cte.TAX_JURIS_CD, \n    cte.TRSPN_ZN_CD, \n    cte.CITY_NM, \n    cte.DSTRC_NM, \n    cte.PSTL_BOX_CD, \n    cte.PSTL_BOX_PSTL_CD_NUM, \n    cte.PSTL_CD_NUM, \n    cte.RGN_NM, \n    cte.ADDR_LINE_1_TXT, \n    cte.CTRY_SHRT_NM, \n    cte.ADDR_NUM, \n    cte.GLN1_NBR, \n    cte.SGMNT_CD, \n    cte.CRT_ON_DTTM, \n    cte.SUP_TYPE_CD, \n    cte.CUST_NUM, \n    cte.ALT_PAYEE_NUM, \n    cte.DEL_IND, \n    cte.PSTNG_BLK_IND, \n    cte.PRCH_BLK_IND, \n    cte.TAX_NUM1, \n    cte.TAX_NUM2, \n    cte.ONE_TIME_ACCT_IND, \n    cte.TRAD_PTNR_CO_CD, \n    cte.VAT_NUM, \n    cte.NTRL_PRSN_IND, \n    cte.PLNT_CD, \n    cte.PMT_BLK_IND, \n    cte.STD_CARR_ACCS_CD, \n    cte.TAX_TYPE_CD, \n    cte.TAX_NUM_TYPE_CD, \n    cte.TAX_NUM3, \n    cte.GLN2_NBR, \n    cte.TAX_NUM4, \n    cte.TAX_NUM5, \n    cte.GLN3_NBR, \n    cte.BLOK_SUP_IND, \n    cte.POD_IND, \n    cte.EXTRNL_MFR_CD,\n    cte._l0_upt_\nFROM \n    cte \nWHERE \n    row = 1\n  \n \n\"\"\")",
        "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
        "scriptMethodFooter" : "    return out0"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false
  },
  "diagnostics" : [ {
    "property" : "$.workflow.processes.85316c5e-39cf-4c7e-9325-bee7adad73c4",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "pyspark.sql.utils.AnalysisException: Column 'SUP_NUM' does not exist. Did you mean one of the following? [SRC_SYS_CD, _deleted_]; line 1 pos 50;",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.e5a27a3c-0dc5-4338-8c84-281a4540b59c",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "One of the upstream gems is broken. Please, fix it first.",
    "tags" : [ ],
    "relatedInformation" : [ ]
  } ]
}