from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.libs import typed_lit
from tbl_strct_MD_BILLING.config.ConfigStore import *
from tbl_strct_MD_BILLING.udfs.UDFs import *

def sql_MD_BILL_DOC_ITM(spark: SparkSession, ) -> (DataFrame):
    df1 = spark.sql(
        "select \ncast('' as string) as SRC_SYS_CD,\ncast('' as string) as BILL_DOC,\ncast('' as string) as BILL_DOC_ITM,\ncast('' as timestamp) as CRT_DTTM,\ncast('' as string) as DOC_REF_NUM,\ncast('' as string) as ITM_REF_NUM,\ncast('' as string) as ORDR_NUM,\ncast('' as string) as ORDR_LINE_NUM,\ncast('' as string) as MATL_NUM,\ncast('' as timestamp) as EXCH_RT_PRC_DTTM,\ncast('' as string) as SLS_UOM_CD,\ncast('' as decimal(18,4)) as BLLD_QTY,\ncast('' as int) as FCTR_NMRTR_MEAS,\ncast('' as int) as FCTR_DNMNTR_MEAS,\ncast('' as decimal(18,4)) as NET_VAL_AMT,\ncast('' as decimal(18,4)) as GRS_VAL,\ncast('' as string) as SLS_UOM_DESC,\ncast('' as string) as PARNT_BOM_CNTR_NBR,\ncast('' as string) as BASE_UOM_CD,\ncast('' as decimal(18,4)) as BLL_QTY_SKU,\ncast('' as decimal(18,4)) as REQ_QTY,\ncast('' as decimal(18,4)) as NET_WT_MEAS,\ncast('' as decimal(18,4)) as GRS_WT_MEAS,\ncast('' as string) as WT_UOM_CD,\ncast('' as decimal(18,4)) as VOL_MEAS,\ncast('' as string) as VOL_UOM_CD,\ncast('' as timestamp) as SRVC_REND_DTTM,\ncast('' as decimal(18,4)) as EXCH_RT_PRC_DTRMN,\ncast('' as string) as PREV_DOC_LINE_NBR,\ncast('' as string) as DOC_CAT_SD,\ncast('' as string) as MATL_SHRT_DESC,\ncast('' as string) as BTCH_NUM,\ncast('' as string) as MATL_GRP_CD,\ncast('' as string) as LINE_ITEM_CAT_CD,\ncast('' as string) as PROD_HIER_CD,\ncast('' as string) as SHIPPING_PT_NUM,\ncast('' as string) as ITM_NUM_PTNR_SGMNT,\ncast('' as string) as PLNT_CD,\ncast('' as string) as DPRT_CTRY,\ncast('' as string) as PLNT_RGN,\ncast('' as string) as MATL_TAX_CLSN,\ncast('' as string) as CARR_OUT_PRC,\ncast('' as string) as SLOC_CD,\ncast('' as string) as GTIN_NUM,\ncast('' as string) as PRCTR_CD,\ncast('' as string) as CASH_DISC_IN,\ncast('' as decimal(18,4)) as CASH_DISC_AMT,\ncast('' as decimal(18,4)) as SLS_VOL_QTY,\ncast('' as string) as DIVISION_CD,\ncast('' as string) as MATL_TAX_CLSN_2,\ncast('' as string) as MATL_TAX_CLSN_3,\ncast('' as string) as MATL_TAX_CLSN_4,\ncast('' as string) as MATL_TAX_CLSN_5,\ncast('' as string) as MATL_TAX_CLSN_6,\ncast('' as string) as MATL_TAX_CLSN_7,\ncast('' as string) as MATL_TAX_CLSN_8,\ncast('' as string) as MATL_TAX_CLSN_9,\ncast('' as string) as CC_CD,\ncast('' as string) as SLS_GRP_CD,\ncast('' as string) as CRT_BY_NM,\ncast('' as string) as PRC_ICMPT_STS_CD,\ncast('' as string) as ICMPT_STS_CD,\ncast('' as string) as CUST_GRP_1,\ncast('' as string) as CUST_GRP_2,\ncast('' as string) as CUST_GRP_3,\ncast('' as string) as CUST_GRP_4,\ncast('' as string) as CUST_GRP_5,\ncast('' as string) as MATL_GRP_1,\ncast('' as string) as MATL_GRP_2,\ncast('' as string) as MATL_GRP_3,\ncast('' as string) as MATL_GRP_4,\ncast('' as string) as MATL_GRP_5,\ncast('' as int) as DAI_ETL_ID,\ncast('' as timestamp) as DAI_CRT_DTTM,\ncast('' as timestamp) as DAI_UPDT_DTTM,\ncast('' as timestamp) as _l0_upt_,\n cast('' as timestamp) as _l1_upt_,\n cast('' as string) as _pk_md5_,\n cast('' as string) as _pk_ \n limit 0"
    )

    return df1
