{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "dev_md_l1"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "p01"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "p01"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_SLS_ORDR_SCHED_LINE_DELV_2"
      },
      "connections" : [ {
        "id" : "5eb8a5c4-3b52-4846-b2d9-9f98738aa7f2",
        "source" : "cb26cd58-61ae-481e-be64-1af30712c630",
        "sourcePort" : "27162918-0611-408a-a78e-6e01f1df921d",
        "target" : "dd85e11f-7396-4b0b-b32b-c10204601e04",
        "targetPort" : "c6694b55-feb8-4435-9018-4057e236c799"
      }, {
        "id" : "16e74cad-2c63-41a3-91e6-fc5e1b0668b9",
        "source" : "0ff3a6b3-9e13-42c5-bdc9-5690fed76f5f",
        "sourcePort" : "b0081247-997e-4244-8edb-15f6c60ab7b4",
        "target" : "cb26cd58-61ae-481e-be64-1af30712c630",
        "targetPort" : "62c5f7b5-93f6-4a00-830f-ea11bbafe86a"
      } ],
      "processes" : {
        "dd85e11f-7396-4b0b-b32b-c10204601e04" : {
          "id" : "dd85e11f-7396-4b0b-b32b-c10204601e04",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_SLS_ORDR_SCHED_LINE_DELV",
            "slug" : "MD_SLS_ORDR_SCHED_LINE_DELV",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "c6694b55-feb8-4435-9018-4057e236c799",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_SLS_ORDR_SCHED_LINE_DELV"
          }
        },
        "cb26cd58-61ae-481e-be64-1af30712c630" : {
          "id" : "cb26cd58-61ae-481e-be64-1af30712c630",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "62c5f7b5-93f6-4a00-830f-ea11bbafe86a",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "27162918-0611-408a-a78e-6e01f1df921d",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct())"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct()))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },
            {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_ETL_ID",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },{
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_CRT_DTTM",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },{
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_UPDT_DTTM",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }
            ]
          }
        },
        "0ff3a6b3-9e13-42c5-bdc9-5690fed76f5f" : {
          "id" : "0ff3a6b3-9e13-42c5-bdc9-5690fed76f5f",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_SLS_ORDR_SCHED_LINE_DELV",
            "slug" : "sql_MD_SLS_ORDR_SCHED_LINE_DELV",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "b0081247-997e-4244-8edb-15f6c60ab7b4",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    select\n(SELECT src_sys.src_sys_cd FROM l1.src_sys\n   WHERE src_sys.src_sys_cd='{src_sys_cd}'\n AND src_sys.active = TRUE) AS SRC_SYS_CD,\nVBEP.posnr as SCHED_LINE_ITM_NUM,\nVBEP.vbeln AS SLS_ORDR_DOC_ID,\nVBEP.etenr AS SCHED_LINE_NUM,\nVBAK.bukrs_vf AS CO_CD,\nVBAK.auart AS SLS_ORDR_TYPE_CD,\nCASE WHEN VBEP.mbdat = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE to_timestamp(CONCAT(VBEP.mbdat,VBEP.mbuhr),'yyyyMMddHHmmss') END AS MATL_AVLBLTY_DTTM,\nCAST(TRIM(VBEP.bmeng) AS DECIMAL(18,4)) AS CNFRM_QTY,\nCASE WHEN VBEP.edatu = '00000000' then null else to_timestamp(VBEP.edatu,\\\"yyyyMMdd\\\") end as RQST_DELV_DTTM,\nCASE WHEN VBEP.wadat = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE to_timestamp(CONCAT(VBEP.wadat,VBEP.wauhr),'yyyyMMddHHmmss') END AS GI_DTTM,\nCAST(TRIM(VBEP.wmeng) AS DECIMAL(18,4)) AS SLS_UNIT_ORDR_QTY,\nTRIM(VBEP.vrkme) AS SLS_UOM_CD,\nTRIM(VBEP.lifsp) AS DELV_BLK_CD,\nTRIM(TVLST.vtext) AS DELV_BLK_DESC,\nCASE WHEN VBEP.tddat = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE to_timestamp(CONCAT(VBEP.tddat,VBEP.tduhr),'yyyyMMddHHmmss') END AS TRSPN_PLAN_DTTM,\nCASE WHEN VBEP.lddat = '00000000' THEN CAST(NULL AS TIMESTAMP) ELSE to_timestamp(CONCAT(VBEP.lddat,VBEP.lduhr),'yyyyMMddHHmmss') END AS LD_DTTM,\nTRIM(ETTYP) SCHED_LINE_CAT,\nTRIM(LFREL) ITM_RLVNT_DELV,\nto_timestamp(EZEIT,\\\"HHmmSS\\\") as ARR_DTTM,\ncast(trim(LMENG) as decimal(18,4)) REQ_QTY_MGMT_SKU,\nTRIM(MEINS) BASE_UNIT_OF_MEAS,\ncase when BDDAT = '00000000' then cast(null as TIMESTAMP) else to_timestamp(BDDAT,\\\"yyyyMMdd\\\") end as REQ_DTTM,\nTRIM(BDART) REQ_TYPE,\nTRIM(PLART) PLNG_TYPE,\nTRIM(VBELE) BUSN_DOC_NUM,\nTRIM(POSNE) BUSN_ITM_NUM,\nTRIM(ETENE) SCHED_LINE,\ncase when RSDAT = '00000000' then cast(null as TIMESTAMP) else to_timestamp(RSDAT,\\\"yyyyMMdd\\\") end as EARLY_POSBL_RESV_DTTM,\nTRIM(IDNNR) MAINT_RQST,\nTRIM(BANFN) PRCH_REQSN_NUM,\nTRIM(BSART) ORDR_TYPE,\nTRIM(BSTYP) PRCHSNG_DOC_CAT,\nTRIM(WEPOS) CNFRM_STS_SCHED_LINE,\nTRIM(REPOS) INVC_RCPT_IN,\ncase when LRGDT = '00000000' then cast(null as TIMESTAMP) else to_timestamp(LRGDT,\\\"yyyyMMdd\\\") end as RTN_RTRN_PKGNG_DTTM,\nTRIM(PRGRS) DT_TYPE,\ncast(TRIM(CMENG) as decimal(18,4)) CORR_QTY_SLS_UNIT,\nTRIM(GRSTR) GRP_DEF_STRC_DATA,\nTRIM(ABART) RLSE_TYPE,\nTRIM(ABRUF) FCST_DELV_SCHED_NUM,\ncast(TRIM(ROMS1) as decimal(18,4)) CMT_QTY,\ncast(TRIM(ROMS2) as decimal(18,4)) SIZE_2,\ncast(TRIM(ROMS3) as decimal(18,4)) SIZE_3,\nTRIM(ROMEI) UNIT_MEAS_SIZE_1_TO_3,\nTRIM(RFORM) FRML_KEY_VAR_SIZE_ITM,\nTRIM(UMVKZ) NUMRTR_CONV_SLS_QTY_INTO_SKU,\nTRIM(UMVKN) DENOM_CONV_SLS_QTY_INTO_SKU,\nTRIM(VERFP) AVLBLTY_CNFRM_AUTMT,\nTRIM(BWART) MVMT_TYPE,\nTRIM(BNFPO) ITM_NUM_PRCH_REQSN,\nTRIM(ETART) SCHED_LINE_TYPE_EDI,\nTRIM(VBEP.AUFNR) ORDR_NUM,\nTRIM(PLNUM) PLAN_ORDR,\nTRIM(SERNR) BOM_EXPLS_NUM,\nTRIM(AESKD) CUST_ENGR_CHG_STS,\ncast(TRIM(ABGES) as decimal(18,4)) GUARNTD,\nTRIM(AULWE) RTE_SCHED,\nnull as  HAND_OVR_LOC_DTTM,\nnull as  DELV_DT_RULE,\ncast(null as decimal(18,4)) as DELV_QTY_BU,\ncast(null as decimal(18,4)) as DELV_QTY_SU,\ncast(null as decimal(18,4)) as OPEN_CNFRM_DELV_QTY_BU,\ncast(null as decimal(18,4)) as OPEN_CNFRM_DELV_QTY_SU,\ncast(null as decimal(18,4)) as OPEN_RQST_DELV_QTY_BU,\ncast(null as decimal(18,4)) as OPEN_RQST_DELV_QTY_SU,\ncast(null as timestamp) as DELV_CRT_DTTM,\ncast(null as timestamp) as  SCHED_LINE_DTTM,\nnull as  RQR_CLS,\ncast(null as timestamp) as DATA_FIL_VAL_DATA_AGE_DTTM,\nnull as  SD_DOC_CRNCY,\ncast(null as decimal(18,4)) as OPEN_DELV_NET_AMT,\nnull as  GUID_RAW_FMT,\nnull as  LEGAL_CNTL_STS,\ncast(null as decimal(18,4)) as RQST_REQ_QTY_BASE_UNIT,\ncast(null as decimal(18,4)) as CNFRM_REQ_QTY_BASE_UNIT,\nnull as  DUMMY_FUNC_LGTH_1,\ncast(null as decimal(18,4)) as ARUN_REQ_ALC_QTY,\nnull as  ORDR_SCHDLNG_GRP_ID,\nnull as  REJ_CD_FOR_PRTL_QTY_REJ,\ncase when MBDAT_DRS='00000000' then null else to_timestamp(MBDAT_DRS,\\\"yyyyMMdd\\\") end as MATL_AVLBLTY_3PTY_ORDR_PLNG_DTTM\nfrom {Config.sourceDatabase}.VBEP VBEP\nLEFT JOIN {Config.sourceDatabase}.VBAK VBAK\non VBEP.VBELN = VBAK.VBELN\nAND VBAK._deleted_ = 'F' AND VBAK.MANDT = \\\"020\\\"\nLEFT JOIN {Config.sourceDatabase}.TVLST TVLST\nON VBEP.LIFSP = TVLST.LIFSP\nAND TVLST._deleted_ = 'F' AND TVLST.MANDT = \\\"020\\\" AND TVLST.SPRAS = 'E'\nwhere VBEP._deleted_ = 'F' AND VBEP.MANDT =\\\"020\\\"  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    