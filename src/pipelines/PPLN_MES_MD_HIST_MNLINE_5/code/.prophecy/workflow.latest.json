{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "dev_md_l1"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "mei"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "mei"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MES_MD_HIST_MNLINE_5"
      },
      "connections" : [ {
        "id" : "ddf72cd0-aaa8-4b2c-8722-9383d30f7e77",
        "source" : "21deddc9-09e0-4858-89ef-f08c97e165c5",
        "sourcePort" : "4c0c9e83-a406-483b-adf1-eb8ae882ccef",
        "target" : "9be076cf-a4f9-44c5-8f4e-68779a6c9b9c",
        "targetPort" : "7e455559-0f93-4c13-816a-b0d021fdc3f9"
      }, {
        "id" : "b6cc821f-a1f4-41e2-82db-81b1148c4860",
        "source" : "0be0f28a-928a-44df-a677-5b3f3aa112c5",
        "sourcePort" : "273ddab0-61e7-4d18-bc0a-ae2907fad517",
        "target" : "21deddc9-09e0-4858-89ef-f08c97e165c5",
        "targetPort" : "3b2ea1d9-aa55-4e20-a35d-43b82904455b"
      } ],
      "processes" : {
        "9be076cf-a4f9-44c5-8f4e-68779a6c9b9c" : {
          "id" : "9be076cf-a4f9-44c5-8f4e-68779a6c9b9c",
          "component" : "Target",
          "metadata" : {
            "label" : "MES_MD_HIST_MNLINE",
            "slug" : "MES_MD_HIST_MNLINE",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "7e455559-0f93-4c13-816a-b0d021fdc3f9",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MES_MD_HIST_MNLINE"
          }
        },
        "21deddc9-09e0-4858-89ef-f08c97e165c5" : {
          "id" : "21deddc9-09e0-4858-89ef-f08c97e165c5",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "3b2ea1d9-aa55-4e20-a35d-43b82904455b",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "4c0c9e83-a406-483b-adf1-eb8ae882ccef",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'HIST_MNLINE_ID',HIST_MNLINE_ID))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'HIST_MNLINE_ID',HIST_MNLINE_ID)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "0be0f28a-928a-44df-a677-5b3f3aa112c5" : {
          "id" : "0be0f28a-928a-44df-a677-5b3f3aa112c5",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MES_MD_HIST_MNLINE",
            "slug" : "sql_MES_MD_HIST_MNLINE",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "273ddab0-61e7-4d18-bc0a-ae2907fad517",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n   '{Config.sourceSystem}' AS SRC_SYS_CD\n, TRIM(HISTORYMAINLINE.HISTORYMAINLINEID) as HIST_MNLINE_ID\n, TRIM(HISTORYMAINLINE.CONTAINERID) as CNTNR_ID\n, TRIM(HISTORYMAINLINE.PRODUCTID) as PROD_ID\n, TRIM(HISTORYMAINLINE.RESOURCEID) as RSRS_ID\n, TRIM(HISTORYMAINLINE.APPLICATION) as APPL_ID\n, TRIM(HISTORYMAINLINE.BASETXNTYPE) as BASE_TXN_TYPE_CD\n, TRIM(HISTORYMAINLINE.BATCHID) as BTCH_ID\n, CAST(HISTORYMAINLINE.BINNINGINCLUDED as BOOLEAN ) as BINNING_INCLD_IND\n, CAST(HISTORYMAINLINE.BONUSINCLUDED as BOOLEAN ) as BNS_INCLD_IND\n, TRIM(HISTORYMAINLINE.CALENDARSHIFTID) as CAL_SHFT_ID\n, TRIM(HISTORYMAINLINE.CARRIERID) as CARR_ID\n, TRIM(HISTORYMAINLINE.ccfEmployeeId) as CCF_EMP_ID\n, TRIM(HISTORYMAINLINE.ccfCertName) as CERT_NM\n, TRIM(HISTORYMAINLINE.ccfCertStatus) as CERT_STS_CD\n, INT(HISTORYMAINLINE.CHANGECOUNT) as CHG_CNT\n, CAST(NULL AS STRING) as CIO_MSG_ID\n, CAST(NULL AS STRING) as CIO_OUTB_MSG_ID\n, TRIM(HISTORYMAINLINE.CLIENT) as CLNT_ID\n, TRIM(HISTORYMAINLINE.COMMENTS) as COMT_TXT\n, TRIM(HISTORYMAINLINE.COMPOUNDTXNTYPE) as CMPND_TXN_TYPE_CD\n, TRIM(HISTORYMAINLINE.COMPUTATIONHISTORYID) as CMPUT_HIST_ID\n, CAST(NULL AS STRING) as CNTNR_STS_CD\n, CAST(HISTORYMAINLINE.DEFECTINCLUDED as BOOLEAN ) as DEFCT_INCLD_IND\n, CAST(NULL AS STRING) as DVC_ID\n, TRIM(HISTORYMAINLINE.EMPLOYEEID) as EMP_ID\n, TRIM(HISTORYMAINLINE.ESIGREQUIREMENTID) as ESIG_REQ_ID\n, CAST(NULL AS STRING) as ETH_EXPSR_TYPE_CD\n, CAST(NULL AS TIMESTAMP) as EXPN_DTTM\n, CAST(NULL AS TIMESTAMP) as EXPN_GMT_DTTM\n, TRIM(HISTORYMAINLINE.FACTORYID) as FCTRY_ID\n, TRIM(HISTORYMAINLINE.HISTORYID) as HIST_ID\n, TRIM(HISTORYMAINLINE.ICONID) as ICON_ID\n, CAST(HISTORYMAINLINE.IMPLICIT as BOOLEAN ) as IMPLICIT_IND\n, CAST(HISTORYMAINLINE.INREWORK as BOOLEAN ) as IN_RWRK_IND\n, CAST(NULL AS BOOLEAN) as IS_FAIL_IND\n, CAST(HISTORYMAINLINE.LOCALREWORKINCLUDED as BOOLEAN ) as LCL_RWRK_INCLD_IND\n, TRIM(HISTORYMAINLINE.LOGINID) as LGN_ID\n, CAST(HISTORYMAINLINE.LOSSINCLUDED as BOOLEAN ) as LOSS_INCLD_IND\n, CAST(NULL AS TIMESTAMP) as MFG_DTTM\n, CAST(NULL AS TIMESTAMP) as MFG_GMT_DTTM\n, case when historymainline.mfgdate = '0000000000' then CAST(NULL AS TIMESTAMP) else to_timestamp(left(historymainline.mfgdate ,14),\\\"yyyyMMddHHmmss\\\")end as MFG_2_DTTM\n, CAST(NULL AS STRING) as MFG_ORDR_NM\n, TRIM(HISTORYMAINLINE.MFGPROCESSOVERRIDESID) as MFG_PRCS_OVRDS_ID\n, CAST(NULL AS STRING) as NC_REF_ID\n, CAST(NULL AS BOOLEAN) as NCR_CRT_IND\n, CAST(NULL AS STRING) as NCR_FAIL_CD_ID\n, TRIM(HISTORYMAINLINE.CDOTYPEID) as OBJ_TYPE_ID\n, CAST(NULL AS DECIMAL(18,4)) as OP_CMPLT_QTY\n, TRIM(HISTORYMAINLINE.OPERATIONID) as OPR_ID\n, CAST(NULL AS STRING) as ORDR_STS_NM\n, TRIM(HISTORYMAINLINE.OWNERID) as OWN_ID\n, TRIM(HISTORYMAINLINE.PARAMETRICDETAILID) as PARAMETRIC_DTL_ID\n, CAST(NULL AS STRING) as PRDTN_ID\n, CAST(HISTORYMAINLINE.QUALITYESIGCONFIRMED as BOOLEAN ) as QUAL_ESIG_CNFRM_IND\n, CAST(NULL AS INT) as RECON_CNT\n, CAST(NULL AS BOOLEAN) as REOPED_IND\n, CAST(NULL AS STRING) as RSRS_AVLBLTY_CD\n, CAST(NULL AS STRING) as RSRS_STS_CD\n, CAST(NULL AS STRING) as RSRS_STS_RSN_ID\n, TRIM(HISTORYMAINLINE.REVERSALSTATUS) as RVSL_STS_CD\n, TRIM(HISTORYMAINLINE.SERVER) as SERVR_ID\n, CAST(NULL AS STRING) as SHFT_ID\n, TRIM(HISTORYMAINLINE.SHIFTNAME) as SHFT_NM\n, TRIM(HISTORYMAINLINE.SPECID) as SPEC_ID\n, TRIM(HISTORYMAINLINE.STATUS) as STS_CD\n, TRIM(HISTORYMAINLINE.STEPENTRYTXNID) as STEP_ENT_TXN_ID\n, INT(HISTORYMAINLINE.STEPPASS) as STEP_PAS_NBR\n, case when historymainline.systemdate = '0000000000' then CAST(NULL AS TIMESTAMP) else to_timestamp(left(historymainline.systemdate ,14),\\\"yyyyMMddHHmmss\\\")end as SYS_DTTM\n, case when historymainline.systemdategmt = '0000000000' then CAST(NULL AS TIMESTAMP) else to_timestamp(left(historymainline.systemdategmt ,14),\\\"yyyyMMddHHmmss\\\")end as SYS_GMT_DTTM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_AMBNT_EXPSR_TM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_DRY_EXPSR_TM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_LGT_EXPSR_TM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_NITROGEN_EXPSR_TM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_POST_EXPSR_TM\n, CAST(NULL AS DECIMAL(18,4)) as TOT_PRE_EXPSR_TM\n, case when historymainline.txndate = '0000000000' then CAST(NULL AS TIMESTAMP) else to_timestamp(left(historymainline.txndate ,14),\\\"yyyyMMddHHmmss\\\")end as TXN_DTTM\n, case when historymainline.txndategmt = '0000000000' then CAST(NULL AS TIMESTAMP) else to_timestamp(left(historymainline.txndategmt ,14),\\\"yyyyMMddHHmmss\\\")end as TXN_GMT_DTTM\n, TRIM(HISTORYMAINLINE.TXNID) as TXN_ID\n, TRIM(HISTORYMAINLINE.TXNTYPE) as TXN_TYPE_CD\n, CAST(NULL AS STRING) as UNIQ_DVC_ID\n, TRIM(HISTORYMAINLINE.USERID) as USRID\n, TRIM(HISTORYMAINLINE.WORKFLOWSTEPID) as WRKF_STEP_ID\n, CAST(NULL AS STRING) as WSTN_ID\nFROM  {Config.sourceDatabase}.HISTORYMAINLINE as HISTORYMAINLINE  WHERE HISTORYMAINLINE._deleted_ = 'F'\n  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    