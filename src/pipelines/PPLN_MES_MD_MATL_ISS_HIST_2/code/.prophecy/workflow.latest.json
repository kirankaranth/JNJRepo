{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "dev_md_l1"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "mvc"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "mvc"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MES_MD_MATL_ISS_HIST_2"
      },
      "connections" : [ {
        "id" : "11d0d7f5-d744-4b28-a314-2239d644cac5",
        "source" : "d3781018-2783-4da9-8ff2-73114e71133c",
        "sourcePort" : "db212448-1834-4f06-9d0e-6cfd27c146e6",
        "target" : "346faa09-a07f-4417-a7b4-1cdee9744ab3",
        "targetPort" : "0ba7b231-ec9b-4f6c-9a39-a54374b1713c"
      }, {
        "id" : "c30bc893-5243-4072-80ef-7b71da0e21ec",
        "source" : "61274519-fddc-45e7-8367-6bdc1a84ec51",
        "sourcePort" : "81fb40c6-5220-49cf-965a-e1bbc25c559b",
        "target" : "d3781018-2783-4da9-8ff2-73114e71133c",
        "targetPort" : "627af8a3-0128-4edb-b537-1596c5c8b282"
      } ],
      "processes" : {
        "346faa09-a07f-4417-a7b4-1cdee9744ab3" : {
          "id" : "346faa09-a07f-4417-a7b4-1cdee9744ab3",
          "component" : "Target",
          "metadata" : {
            "label" : "MES_MD_MATL_ISS_HIST",
            "slug" : "MES_MD_MATL_ISS_HIST",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "0ba7b231-ec9b-4f6c-9a39-a54374b1713c",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MES_MD_MATL_ISS_HIST"
          }
        },
        "d3781018-2783-4da9-8ff2-73114e71133c" : {
          "id" : "d3781018-2783-4da9-8ff2-73114e71133c",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "627af8a3-0128-4edb-b537-1596c5c8b282",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "db212448-1834-4f06-9d0e-6cfd27c146e6",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_ISS_HIST_ID',MATL_ISS_HIST_ID))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_ISS_HIST_ID',MATL_ISS_HIST_ID)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "61274519-fddc-45e7-8367-6bdc1a84ec51" : {
          "id" : "61274519-fddc-45e7-8367-6bdc1a84ec51",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MES_MD_MATL_ISS_HIST",
            "slug" : "sql_MES_MD_MATL_ISS_HIST",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "81fb40c6-5220-49cf-965a-e1bbc25c559b",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n   '{Config.sourceSystem}' AS SRC_SYS_CD\n, TRIM(IssueActualsHistory.ISSUEACTUALSHISTORYID) as MATL_ISS_HIST_ID\n, TRIM(IssueActualsHistory.FROMCONTAINERID) as FROM_CNTNR_ID\n, TRIM(IssueActualsHistory.PRODUCTID) as PROD_ID\n, TRIM(IssueActualsHistory.RESOURCEID) as RSRS_ID\n, TRIM(IssueActualsHistory.TOCONTAINERID) as TO_CNTNR_ID\n, NULL as BIN_NUM\n, INT(IssueActualsHistory.CHANGECOUNT) as CHG_CNT\n, case when issueactualshistory.estimatedtime = '0000000000' then null else to_timestamp (concat(LEFT(issueactualshistory.estimatedtime, 4), '-',  right(LEFT(issueactualshistory.estimatedtime, 6),2), '-',  right(LEFT(issueactualshistory.estimatedtime, 8),2), ' ',right(LEFT(issueactualshistory.estimatedtime, 10),2),':',right(LEFT(issueactualshistory.estimatedtime, 12),2),':', right(LEFT(issueactualshistory.estimatedtime, 14),2))) end as EST_DTTM\n, CAST(NULL AS TIMESTAMP) as EXP_DTTM\n, NULL as EXPT_IMPT_KEY_VAL\n, TRIM(IssueActualsHistory.FROMBATCHID) as FROM_BTCH_ID\n, TRIM(IssueActualsHistory.FROMCARRIERID) as FROM_CARR_ID\n, TRIM(IssueActualsHistory.FROMLOCATIONID) as FROM_LOC_ID\n, TRIM(IssueActualsHistory.FROMLOT) as FROM_LOT_ID\n, TRIM(IssueActualsHistory.FROMSTOCKPOINT) as FROM_STK_PT_ID\n, TRIM(IssueActualsHistory.HISTORYID) as HIST_ID\n, CAST(TRIM(IssueActualsHistory.ISAUTOWEIGHTENTRY) AS BOOLEAN) as IS_AUTO_WT_ENT_IND\n, NULL as IS_MATL_QUE_DTL_ID\n, NULL as ISS_DIFF_RSN_ID\n, CAST(IssueActualsHistory.QTY AS DECIMAL(18, 4)) as ISS_QTY\n, CAST(IssueActualsHistory.QTY2 AS DECIMAL(18, 4)) as ISS_2_QTY\n, TRIM(IssueActualsHistory.ISSUEREASONID) as ISS_RSN_ID\n, CAST(TRIM(IssueActualsHistory.MANUALOVERRIDE) AS BOOLEAN) as MAN_OVRD_IND\n, TRIM(IssueActualsHistory.ISSUEHISTORYDETAILID) as MATL_ISS_HIST_DTL_ID\n, TRIM(IssueActualsHistory.NOTES) as NOTES_TXT\n, INT(IssueActualsHistory.CDOTYPEID) as OBJ_TYPE_ID\n, TRIM(IssueActualsHistory.PRODUCTDESCRIPTION) as PROD_DESC\n, TRIM(IssueActualsHistory.REFERENCEDESIGNATOR) as REF_DSGNR_VAL\n, NULL as SCALE_ID\n, NULL as STRG_TYPE_CD\n, TRIM(IssueActualsHistory.SUBSTITUTIONREASONID) as SUBST_RSN_ID\n, NULL as TARE_WT_VAL\n, TRIM(IssueActualsHistory.TOLOCATIONID) as TO_LOC_ID\n, CAST(NULL AS BOOLEAN) as TLRNC_OVRD_IND\n, TRIM(IssueActualsHistory.TXNID) as TXN_ID\n, TRIM(IssueActualsHistory.VENDORITEMID) as VEND_ITM_ID\nFROM  {Config.sourceDatabase}.IssueActualsHistory as IssueActualsHistory  WHERE IssueActualsHistory._deleted_ = 'F'\n  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    