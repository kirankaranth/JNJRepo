{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "hmd"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_PRCH_DELV_CNFRMS_5"
      },
      "connections" : [ {
        "id" : "135feb08-4a14-4858-a2bc-012b3a0ec844",
        "source" : "e1a0cbd6-6051-435e-b91e-b93501ec866c",
        "sourcePort" : "7d228ba1-9637-41ac-a390-ee075afca490",
        "target" : "ba45a43e-d8c9-4522-a8d6-f6079b347c4f",
        "targetPort" : "d6f41b94-9552-40a6-a163-6be06c673204"
      }, {
        "id" : "1e2b7053-63be-4f4e-a5e8-0578af046801",
        "source" : "0bd892d4-2e8a-4467-a7bb-2b197b72a09f",
        "sourcePort" : "7c7f439b-229f-4d50-be55-744712f418de",
        "target" : "e1a0cbd6-6051-435e-b91e-b93501ec866c",
        "targetPort" : "33652f41-3440-41ca-a564-3b27828fa122"
      } ],
      "processes" : {
        "ba45a43e-d8c9-4522-a8d6-f6079b347c4f" : {
          "id" : "ba45a43e-d8c9-4522-a8d6-f6079b347c4f",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_PRCH_DELV_CNFRMS",
            "slug" : "MD_PRCH_DELV_CNFRMS",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "d6f41b94-9552-40a6-a163-6be06c673204",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_PRCH_DELV_CNFRMS"
          }
        },
        "e1a0cbd6-6051-435e-b91e-b93501ec866c" : {
          "id" : "e1a0cbd6-6051-435e-b91e-b93501ec866c",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "33652f41-3440-41ca-a564-3b27828fa122",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "7d228ba1-9637-41ac-a390-ee075afca490",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "0bd892d4-2e8a-4467-a7bb-2b197b72a09f" : {
          "id" : "0bd892d4-2e8a-4467-a7bb-2b197b72a09f",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_PRCH_DELV_CNFRMS",
            "slug" : "sql_MD_PRCH_DELV_CNFRMS",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "7c7f439b-229f-4d50-be55-744712f418de",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n    '{Config.sourceSystem}'   AS SRC_SYS_CD,\n    TRIM(EKES.ebeln) AS PO_NUM,\n    TRIM(EKES.ebelp) AS PO_LINE_NBR,\n    CAST(TRIM(EKES.etens) AS INT) AS CNFRM_SEQ_NBR,\n    TRIM(EKES.ebtyp) AS CNFRM_CAT_CD,\n    CASE\n      WHEN TRIM(EKES.eindt)='00000000' THEN NULL\n      ELSE TO_TIMESTAMP(TRIM(EKES.eindt),\\\"yyyyMMdd\\\")\n    END AS DELV_DTTM,\n    CASE\n      WHEN TRIM(EKES.erdat)='00000000' THEN NULL\n      ELSE TO_TIMESTAMP(TRIM(EKES.erdat),\\\"yyyyMMdd\\\")\n    END AS CRT_ON_DTTM,\n    CAST(TRIM(EKES.menge) AS DECIMAL(18,4)) AS CNFRM_QTY,\n    CAST(TRIM(EKES.dabmg) AS DECIMAL(18,4)) AS MRP_ADJ_QTY,\n    TRIM(EKES.vbeln) AS SLS_ORDR_NUM,\n    TRIM(EKES.vbelp) AS SLS_ORDR_LINE_NBR,\n    TRIM(EKES.charg) AS VEND_BTCH_NUM,\n TRIM(EKES.xblnr) AS REF_DOC_NUM,\n '#' as CO_CD,\n '#' as ORDER_SUF\nFROM {Config.sourceDatabase}.EKES EKES\nWHERE EKES._deleted_ = 'F' AND  EKES.MANDT = (SELECT L1_PARAMETERS.PARAM_VAL from l1_md_prophecy_config.l1_parameters L1_PARAMETERS WHERE L1_PARAMETERS.ENV_NM = '{env}' AND L1_PARAMETERS.PARAM_NM = 'mandt_filter')  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    