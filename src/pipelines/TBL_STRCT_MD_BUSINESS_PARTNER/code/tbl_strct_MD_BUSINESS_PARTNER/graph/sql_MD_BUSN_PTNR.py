from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.libs import typed_lit
from tbl_strct_MD_BUSINESS_PARTNER.config.ConfigStore import *
from tbl_strct_MD_BUSINESS_PARTNER.udfs.UDFs import *

def sql_MD_BUSN_PTNR(spark: SparkSession, ) -> (DataFrame):
    df1 = spark.sql(
        "select \ncast('' as string) as SRC_SYS_CD,\ncast('' as string) as BUSN_PTNR_NUM,\ncast('' as string) as BUSN_PTNR_CAT,\ncast('' as string) as BUSN_PTNR_TYPE,\ncast('' as string) as BUSN_PTNR_GRP,\ncast('' as string) as BUSN_PTNR_NUM_EXTRNL_SYS,\ncast('' as string) as BUSN_PTNR_SRCH_1,\ncast('' as string) as BUSN_PTNR_SRCH_2,\ncast('' as string) as DATA_ORIG_TYPES,\ncast('' as string) as ADDR_FORM_KEY,\ncast('' as string) as CENT_ARCH_FL,\ncast('' as string) as BUSN_PTNR_CENT_BLK,\ncast('' as string) as AUTH_GRP,\ncast('' as string) as BUSN_PTNR_SALN,\ncast('' as string) as LOGL_SYS,\ncast('' as string) as BUSN_PTNR_PRMSSN,\ncast('' as string) as NOT_RELS_IN,\ncast('' as string) as NOT_LEGALLY_CMPTN_IN,\ncast('' as string) as BUSN_PTNR_PRT_FMT,\ncast('' as string) as COST_RT_REVN,\ncast('' as string) as ORG_NM_1,\ncast('' as string) as ORG_NM_2,\ncast('' as string) as ORG_NM_3,\ncast('' as string) as ORG_NM_4,\ncast('' as string) as LEGAL_FORM_OF_ORG,\ncast('' as string) as INDSTR_SECTR,\ncast('' as string) as LEGAL_ENTITY_OF_ORG,\ncast('' as timestamp) as ORG_FOUNDED_DTTM,\ncast('' as timestamp) as ORG_LQDTE_DTTM,\ncast('' as int) as INTNL_LOC_NUM_1,\ncast('' as int) as INTNL_LOC_NUM_2,\ncast('' as int) as INTNL_LOC_NUM_3,\ncast('' as string) as BUSN_PTNR_LAST_NM,\ncast('' as string) as BUSN_PTNR_FST_NM,\ncast('' as string) as OTHER_LAST_NM,\ncast('' as string) as BUSN_PTNR_NM_AT_BIRTH,\ncast('' as string) as MIDDLE_NM,\ncast('' as string) as ACDMC_TITLE,\ncast('' as string) as SEC_ACDMC_TITLE,\ncast('' as string) as NOBLE_TITLE,\ncast('' as string) as NM_PREFIX_1,\ncast('' as string) as NM_PREFIX_2,\ncast('' as string) as BUSN_PTNR_FULL_NM,\ncast('' as string) as BUSN_PTNR_NNM,\ncast('' as string) as BUSN_PTNR_MI,\ncast('' as string) as NM_FMT,\ncast('' as string) as NM_CTRY,\ncast('' as string) as BUNS_PTNR_CRSP_LANG,\ncast('' as string) as BUSN_PTNR_BIRTHPLACE,\ncast('' as string) as BUSN_PTNR_MRTL_STS,\ncast('' as string) as EMPLR_NM,\ncast('' as string) as OCCP_GRP,\ncast('' as string) as NTLTY,\ncast('' as string) as CTRY_OF_ORIG,\ncast('' as string) as PRSN_NUM,\ncast('' as string) as BUSN_PTNR_LANG,\ncast('' as string) as BUSN_PTNR_GNDR,\ncast('' as timestamp) as BUSN_PTNR_DOB_DTTM,\ncast('' as timestamp) as BUSN_PTNR_DT_OF_DEATH_DTTM,\ncast('' as int) as PERS_NUM,\ncast('' as string) as BUSN_PTNR_GRP_TYPE,\ncast('' as string) as GRP_NM_1,\ncast('' as string) as GRP_NM_2,\ncast('' as string) as SRCH_NM_1,\ncast('' as string) as SRCH_NM_2,\ncast('' as string) as OBJ_CRT_USER,\ncast('' as timestamp) as OBJ_CRT_DT_TIME_DTTM,\ncast('' as string) as OBJ_CHG_USER,\ncast('' as timestamp) as OBJ_CHG_DT_TIME_DTTM,\ncast('' as string) as ADDR_NUM,\ncast('' as string) as CHG_DOC_CNV,\ncast('' as string) as BUSN_PTNR_ORG_CTR_IN,\ncast('' as timestamp) as BUSN_PTNR_VLD_STRT_DTTM,\ncast('' as timestamp) as BUSN_PTNR_VLD_END_DTTM,\ncast('' as string) as BUSN_PRPS_CMPLT_FL,\ncast('' as string) as BUSN_PTNR_NTRL_PRSN,\ncast('' as string) as MIL_ID,\ncast('' as string) as NUCLR_SECT_IN,\ncast('' as string) as BUSN_PTNR_RELS,\ncast('' as string) as CTRY_RGN_BANK_KEY,\ncast('' as string) as BANK_KEYS,\ncast('' as string) as LEGIT_TYPE,\ncast('' as string) as LEGIT_DOC_ID_NUM,\ncast('' as string) as RESP_LCL_COURT,\ncast('' as string) as COMML_REGS_ENT,\ncast('' as string) as BUSN_PTNR_REGS_ENT,\ncast('' as string) as REGS_OF_COOP_ENT,\ncast('' as timestamp) as TRD_REGS_ENT_DTTM,\ncast('' as int) as CR_VAL,\ncast('' as timestamp) as CR_VAL_SET_DTTM,\ncast('' as int) as DAI_ETL_ID,\ncast('' as timestamp) as DAI_CRT_DTTM,\ncast('' as timestamp) as DAI_UPDT_DTTM,\ncast('' as timestamp) as _l0_upt_,\n cast('' as timestamp) as _l1_upt_,\n cast('' as string) as _pk_md5_,\n cast('' as string) as _pk_ \n limit 0"
    )

    return df1
