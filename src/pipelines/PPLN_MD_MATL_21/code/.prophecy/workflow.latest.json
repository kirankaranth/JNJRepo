{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "djd"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "djd"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_MATL_21"
      },
      "connections" : [ {
        "id" : "ad1f1277-a9f4-4c88-9f69-cdb123c54249",
        "source" : "792323f2-7043-47e1-85a1-26c62bcfa574",
        "sourcePort" : "3a19d74a-9747-4b75-99fd-280aed6643d5",
        "target" : "a0d13b79-7b42-42fe-a1e8-22976efd11b1",
        "targetPort" : "5046307a-6fae-4056-9c8e-bf1520383ebe"
      }, {
        "id" : "69b907d1-9bc4-493c-ba43-e453aeab7696",
        "source" : "6c2b4037-e3ce-43a5-ba09-8d888dcf429f",
        "sourcePort" : "01909b96-0d06-4a5f-afeb-8b45a62473b6",
        "target" : "792323f2-7043-47e1-85a1-26c62bcfa574",
        "targetPort" : "948cdd6a-0df8-4fae-b67a-321a19110954"
      } ],
      "processes" : {
        "a0d13b79-7b42-42fe-a1e8-22976efd11b1" : {
          "id" : "a0d13b79-7b42-42fe-a1e8-22976efd11b1",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_MATL",
            "slug" : "MD_MATL",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "5046307a-6fae-4056-9c8e-bf1520383ebe",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_MATL"
          }
        },
        "792323f2-7043-47e1-85a1-26c62bcfa574" : {
          "id" : "792323f2-7043-47e1-85a1-26c62bcfa574",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "948cdd6a-0df8-4fae-b67a-321a19110954",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "3a19d74a-9747-4b75-99fd-280aed6643d5",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "6c2b4037-e3ce-43a5-ba09-8d888dcf429f" : {
          "id" : "6c2b4037-e3ce-43a5-ba09-8d888dcf429f",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_MATL",
            "slug" : "sql_MD_MATL",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "01909b96-0d06-4a5f-afeb-8b45a62473b6",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    select\n  '{Config.sourceSystem}'  AS SRC_SYS_CD,\n  f4101.imlitm AS MATL_NUM,\n  TRIM (f4101.imsrp4) AS MATL_TYPE_CD,\n  \n  TRIM (f4101.imsrp9) AS FRANCHISE_CD,\n  TRIM (f4101.imsrp2) AS LCL_PLNG_SUB_FRAN_CD,\n  \n  \n  TRIM (f4101.imprp4) AS MATL_GRP_CD,\n  TRIM (f4101.imprp7) AS INDSTR_SECTR_CD,\n  TRIM (f4101.imuom1) AS BASE_UOM_CD,\n  CAST (f4101.imsld AS decimal(18, 4)) AS TOT_SHLF_LIF_DAYS_CNT,\n  \n  TRIM(f4101.imstkt) AS MATL_STS_CD,\n  \n  \n  TRIM(f4101.imsrp1) AS PROD_HIER_CD,\n  \n  \n  \n  \n  TRIM (f4101.imsrce) AS BTCH_MNG_IND,\n  TRIM (f4101.imdraw) AS MATL_DOC_NUM,\n  TRIM (f4101.imrvno) AS MATL_DOC_VERS_NUM,\n  TRIM (f4101.imdsc1) AS MATL_SHRT_DESC,\n  \n  \n  \n  \n  \n  TRIM (f4101.imaitm) AS MATL_CATLG_NUM,\n  \n  \n  TRIM (f4101.imsrp3) AS MATL_SUB_TYPE_CD,\n  TRIM (f4101.imglpt) AS FIN_HIER_BASE_CD,\n  TRIM (f4101.imsrp4) AS IMPLNT_INSTM_IND,\n  \n  \n  \n  TRIM(f4101.imsrp8) AS DIR_PART_MRKNG_CD,\n  TRIM(f4101.imsrp5) AS MATL_CAT_GRP_CD,\n  TRIM(f4101.imprp0) AS PLNG_HIER3_CD,\n  \n  \n  TRIM (f4101.imuser) AS CHG_BY,\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  TRIM(f4101.imuwum) AS WT_UNIT,\n  \n  \n  CASE\n    WHEN LENGTH(f4101.imtday) = 6 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101.imupmj + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101.imupmj, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        f4101.imtday\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    WHEN LENGTH(f4101.imtday) = 5 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101.imupmj + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101.imupmj, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        concat(0, f4101.imtday)\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    ELSE TO_TIMESTAMP(\n      DATE_ADD(\n        CAST(SUBSTRING(f4101.imupmj + 1900000, 1, 4) AS Date),\n        CAST(SUBSTRING(f4101.imupmj, 4, 3) as INT) -1\n      )\n    )\n  END AS LAST_CHG_DT_TIME_DTTM,\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  TRIM(f4101.imuvm1) AS VOL_UNIT,\n  CAST(f4101.imvcud AS DECIMAL(18, 4)) AS VOL,\n  \n  TRIM(f4101.imlnty) AS DOC_TYPE,\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  TRIM(f0005_s4.drdl01) AS MATL_TYPE_DESC,\n  TRIM(f0005_09.drdl01) AS FRAN_CD_DESC,\n  \n  \n  \n  TRIM(f4101.imprp7) AS STERILE,\n  TRIM(f4101.imsrp0) AS BRAVO_MINOR_CODE,\n  TRIM(f0005_10.drdl01) AS BRAVO_MINOR_CODE_DESC,\n  \n  \n  \n  \n  TRIM(f0005_p4.drdl01) AS MATL_GRP_DESC,\n  \n  f4101.imitm AS SHRT_MATL_NUM,\n  \n  \n  \n  \n  \nFROM\n  {Config.sourceDatabase}.f4101 f4101\n  LEFT JOIN {Config.sourceDatabase}.f0005 f0005_s4 ON f4101.IMSRP4 = TRIM(f0005_s4.DRKY)\n  AND TRIM(f0005_s4.DRSY) = '41'\n  AND f0005_s4.DRRT = 'S4'\n  AND f0005_s4._deleted_ = 'F'\n  LEFT JOIN {Config.sourceDatabase}.f0005 f0005_09 ON f4101.IMSRP9 = TRIM(f0005_09.DRKY)\n  AND TRIM(f0005_09.DRSY) = '41'\n  AND f0005_09.DRRT = '09'\n  AND f0005_09._deleted_ = 'F'\n  LEFT JOIN {Config.sourceDatabase}.f0005 f0005_10 ON f4101.IMSRP0 = TRIM(f0005_10.DRKY)\n  AND TRIM(f0005_10.DRSY) = '41'\n  AND f0005_10.DRRT = '10'\n  AND f0005_10._deleted_ = 'F'\n  LEFT JOIN {Config.sourceDatabase}.f0005 f0005_p4 ON f4101.IMSRP4 = TRIM(f0005_p4.DRKY)\n  AND TRIM(f0005_p4.DRSY) = '41'\n  AND f0005_p4.DRRT = 'P4'\n  AND f0005_p4._deleted_ = 'F'\nWHERE\n  f4101._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    