{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "jsw"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "jsw"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_MATL_13"
      },
      "connections" : [ {
        "id" : "cfab60bb-675a-4ffa-9de5-f0b7538a4c87",
        "source" : "563972c0-c78c-4cab-91c9-68f6ecf6e40c",
        "sourcePort" : "c8e22f2b-0dcb-4c81-9c4f-ef235c946701",
        "target" : "9474f84f-7ab3-4486-8438-a057a473b4ea",
        "targetPort" : "5bfd1e71-cd3d-4a1c-93c2-a0b8a6a0d706"
      }, {
        "id" : "cb667155-822d-4953-bb8d-faa29510ffca",
        "source" : "a3a75b7e-581c-454b-a4dd-f1cb3b152dc4",
        "sourcePort" : "a7d005bb-755c-4fa4-a2ef-a79757a44ee3",
        "target" : "563972c0-c78c-4cab-91c9-68f6ecf6e40c",
        "targetPort" : "08561d5d-3f66-4adf-b444-f329eb8137f5"
      } ],
      "processes" : {
        "9474f84f-7ab3-4486-8438-a057a473b4ea" : {
          "id" : "9474f84f-7ab3-4486-8438-a057a473b4ea",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_MATL",
            "slug" : "MD_MATL",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "5bfd1e71-cd3d-4a1c-93c2-a0b8a6a0d706",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_MATL"
          }
        },
        "563972c0-c78c-4cab-91c9-68f6ecf6e40c" : {
          "id" : "563972c0-c78c-4cab-91c9-68f6ecf6e40c",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "08561d5d-3f66-4adf-b444-f329eb8137f5",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "c8e22f2b-0dcb-4c81-9c4f-ef235c946701",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "a3a75b7e-581c-454b-a4dd-f1cb3b152dc4" : {
          "id" : "a3a75b7e-581c-454b-a4dd-f1cb3b152dc4",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_MATL",
            "slug" : "sql_MD_MATL",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "a7d005bb-755c-4fa4-a2ef-a79757a44ee3",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    select\n '{Config.sourceSystem}'  AS SRC_SYS_CD,\nf4101.imlitm AS MATL_NUM,\nTRIM (f4101.imprp1) AS MATL_TYPE_CD,\n\nTRIM (f4101.imsrp1) AS FRANCHISE_CD,\nTRIM (f4101.imsrp7) AS LCL_PLNG_SUB_FRAN_CD,\n\n\nTRIM (f4101.imprp4) AS MATL_GRP_CD,\nTRIM (f4101.imsrp8) AS INDSTR_SECTR_CD,\nTRIM (f4101.imuom1) AS BASE_UOM_CD,\nCAST (TRIM(f4101.imsld)  AS decimal(18,4)) AS TOT_SHLF_LIF_DAYS_CNT,\n\nTRIM(f4101.imstkt) AS MATL_STS_CD,\n\n\nTRIM (f4101.imsrp7) AS PROD_HIER_CD,\n\nTRIM (f4101.imprp7) AS STRG_CONDS_CD,\n\n\nTRIM (f4101.imsrce) AS BTCH_MNG_IND,\nTRIM (f4101.imdraw) AS MATL_DOC_NUM,\nTRIM (f4101.imrvno) AS MATL_DOC_VERS_NUM,\nCONCAT (TRIM(f4101.imdsc1),' ; ',TRIM(f4101.imdsc2)) AS MATL_SHRT_DESC,\n\n\n\n\n\nTRIM (f4101.imaitm) AS MATL_CATLG_NUM,\nTRIM (f4101.imsrp5) AS SRC_SECTR_CD,\n\nTRIM (f4101.imsrp4) AS MATL_SUB_TYPE_CD,\nTRIM (f4101.imglpt) AS FIN_HIER_BASE_CD,\n\n\n\n\n\nTRIM (f4101.imsrp3) AS MATL_CAT_GRP_CD,\nTRIM (f4101.imsrp0) AS PLNG_HIER3_CD,\n\n\nTRIM (f4101.imuser) AS CHG_BY,\n\n\n\n\n\n\n\n\n\n\n\n\nTRIM(f4101.imuwum) AS WT_UNIT,\n\n\nCASE\n    WHEN LENGTH(f4101.imtday) = 6 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101.IMUPMJ + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101.IMUPMJ, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        f4101.imtday\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    WHEN LENGTH(f4101.imtday) = 5 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101.IMUPMJ + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101.IMUPMJ, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        concat(0, f4101.imtday)\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    ELSE TO_TIMESTAMP(\n      DATE_ADD(\n        CAST(SUBSTRING(f4101.IMUPMJ + 1900000, 1, 4) AS Date),\n        CAST(SUBSTRING(f4101.IMUPMJ, 4, 3) as INT) -1\n      )\n    )\nEND AS LAST_CHG_DT_TIME_DTTM,\n\n\n\n\n\n\n\n\n\n\n\nTRIM(f4101.imuvm1) AS VOL_UNIT,\nCAST(TRIM(f4101.imvcud) AS DECIMAL(18,4))  AS VOL,\n\nTRIM(f4101.imlnty) AS DOC_TYPE,\n\n\n\n\n\n\n\n\nTRIM (f4101.imsrp2) AS PROD_LINE,\n\n\n\nTRIM(f0005_p1.drdl01) AS MATL_TYPE_DESC,\nTRIM(f0005_s1.drdl01) AS FRAN_CD_DESC,\n\n\n\nTRIM(f4101.imprp2) AS STERILE,\nTRIM(f4101.imsrp6) AS BRAVO_MINOR_CODE,\nTRIM(f0005_07.drdl01) AS BRAVO_MINOR_CODE_DESC,\n\n\n\n\nTRIM(f0005_p4.drdl01) AS MATL_GRP_DESC,\n\nf4101.imitm AS SHRT_MATL_NUM,\n\n\n\n\n\nFROM {Config.sourceDatabase}.f4101 f4101\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_p1\nON f4101.IMPRP1 = TRIM(f0005_p1.DRKY)\nAND TRIM(f0005_p1.DRSY) = '41'\nAND f0005_p1.DRRT = 'P1'\nAND f0005_p1._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_s1 \nON f4101.IMSRP1 = TRIM(f0005_s1.DRKY) \nAND TRIM(f0005_s1.DRSY) = '41'\nAND f0005_s1.DRRT = 'S1'\nAND f0005_s1._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_07\nON f4101.IMSRP6 = TRIM(f0005_07.DRKY) \nAND TRIM(f0005_07.DRSY) = '41'\nAND f0005_07.DRRT = '07'\nAND f0005_07._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_p4\nON f4101.IMPRP4 = TRIM(f0005_p4.DRKY)\nAND TRIM(f0005_p4.DRSY) = '41'\nAND f0005_p4.DRRT = 'P4'\nAND f0005_p4._deleted_ = 'F'\nWHERE  f4101._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    