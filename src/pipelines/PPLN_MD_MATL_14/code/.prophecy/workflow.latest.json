{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "l1_md_prophecy"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "jet"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "jet"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "PPLN_MD_MATL_14"
      },
      "connections" : [ {
        "id" : "968247ea-c3af-4160-bb5f-4d3560385003",
        "source" : "f6023b2e-84a2-45a8-bb56-a2cb9ca1a779",
        "sourcePort" : "c6e54d2d-c5c8-43c9-8054-aa75a1732d91",
        "target" : "1c35a431-82c4-4ec4-b4cb-27a89bd1cea7",
        "targetPort" : "e34a981c-a2e7-4a70-80d8-38b7614dbdf0"
      }, {
        "id" : "4d2ddf09-32fc-46f0-8f3e-de6eb4d273fb",
        "source" : "a0858621-e43e-4838-8916-27df0914a52a",
        "sourcePort" : "b785ed80-6a5c-4e47-add5-d08eba3a868e",
        "target" : "f6023b2e-84a2-45a8-bb56-a2cb9ca1a779",
        "targetPort" : "80e7c684-593b-48f6-94ee-bca7a11ddd35"
      } ],
      "processes" : {
        "1c35a431-82c4-4ec4-b4cb-27a89bd1cea7" : {
          "id" : "1c35a431-82c4-4ec4-b4cb-27a89bd1cea7",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_MATL",
            "slug" : "MD_MATL",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "e34a981c-a2e7-4a70-80d8-38b7614dbdf0",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_MATL"
          }
        },
        "f6023b2e-84a2-45a8-bb56-a2cb9ca1a779" : {
          "id" : "f6023b2e-84a2-45a8-bb56-a2cb9ca1a779",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "80e7c684-593b-48f6-94ee-bca7a11ddd35",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "c6e54d2d-c5c8-43c9-8054-aa75a1732d91",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'MATL_NUM',MATL_NUM)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            } ]
          }
        },
        "a0858621-e43e-4838-8916-27df0914a52a" : {
          "id" : "a0858621-e43e-4838-8916-27df0914a52a",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_MATL",
            "slug" : "sql_MD_MATL",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "b785ed80-6a5c-4e47-add5-d08eba3a868e",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    select\n '{Config.sourceSystem}'  AS SRC_SYS_CD,\nf4101_adt.imlitm AS MATL_NUM,\nTRIM (f4101_adt.imprp0) AS MATL_TYPE_CD,\nTRIM (f4101_adt.imsrp7) AS BRND_CD,\nTRIM (f4101_adt.imsrp1) AS FRANCHISE_CD,\nTRIM (f4101_adt.imsrp2) AS LCL_PLNG_SUB_FRAN_CD,\n\n\nTRIM (f4101_adt.imsrp8) AS MATL_GRP_CD,\n\nTRIM (f4101_adt.imuom1) AS BASE_UOM_CD,\nCAST (TRIM(f4101_adt.imsld)   AS decimal(18,4)) AS TOT_SHLF_LIF_DAYS_CNT,\n\nTRIM(f4101_adt.imstkt) AS MATL_STS_CD,\n\n\nTRIM(f4101_adt.imsrp6) AS PROD_HIER_CD,\n\nTRIM (f4101_adt.imprp7) AS STRG_CONDS_CD,\n\n\nTRIM (f4101_adt.imsrce) AS BTCH_MNG_IND,\nTRIM (f4101_adt.imdraw) AS MATL_DOC_NUM,\nTRIM (f4101_adt.imrvno) AS MATL_DOC_VERS_NUM,\nCONCAT (trim(f4101_adt.imdsc1),' ; ',trim(f4101_adt.imdsc2)) AS MATL_SHRT_DESC,\n\n\n\n\n\nTRIM (f4101_adt.imaitm) AS MATL_CATLG_NUM,\nTRIM (f4101_adt.imsrp5) AS SRC_SECTR_CD,\n\nTRIM (f4101_adt.imsrp9) AS MATL_SUB_TYPE_CD,\nTRIM (f4101_adt.imglpt) AS FIN_HIER_BASE_CD,\n\n\nTRIM (f4101_adt.imprp4) AS KIT_IND,\n\n\n\nTRIM (f4101_adt.imprp9) AS PLNG_HIER3_CD,\n\n\nTRIM(f4101_adt.imuser) AS CHG_BY,\n\n\n\n\n\n\n\n\n\n\n\n\nTRIM(f4101_adt.imuwum) AS WT_UNIT,\n\n\nCASE\n    WHEN LENGTH(f4101_adt.imtday) = 6 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101_adt.IMUPMJ + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101_adt.IMUPMJ, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        f4101_adt.imtday\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    WHEN LENGTH(f4101_adt.imtday) = 5 THEN TO_TIMESTAMP(\n      CONCAT(\n        DATE_ADD(\n          CAST(\n            SUBSTRING(f4101_adt.IMUPMJ + 1900000, 1, 4) AS DATE\n          ),\n          CAST(SUBSTRING(f4101_adt.IMUPMJ, 4, 3) AS INT) -1\n        ),\n        \\\"\\\"\\\"\\\",\n        concat(0, f4101_adt.imtday)\n      ),\n      'yyyy-MM-ddHHmmss'\n    )\n    ELSE TO_TIMESTAMP(\n      DATE_ADD(\n        CAST(SUBSTRING(f4101_adt.IMUPMJ + 1900000, 1, 4) AS Date),\n        CAST(SUBSTRING(f4101_adt.IMUPMJ, 4, 3) as INT) -1\n      )\n    )\nEND AS LAST_CHG_DT_TIME_DTTM,\n\n\n\n\n\n\n\n\n\n\n\nTRIM(f4101_adt.imuvm1) AS VOL_UNIT,\nCAST(TRIM(f4101_adt.imvcud) AS DECIMAL(18,4)) AS VOL,\n\nTRIM(f4101_adt.imlnty) AS DOC_TYPE,\n\n\n\n\n\n\n\n\nTRIM(f4101_adt.imsrp3) AS PROD_LINE,\n\n\n\nTRIM(f0005_05.drdl01) AS MATL_TYPE_DESC,\nTRIM(f0005_s1.drdl01) AS FRAN_CD_DESC,\n\n\n\n\nTRIM(f4101_adt.imsrp0) AS BRAVO_MINOR_CODE,\nTRIM(f0005_10.drdl01) AS BRAVO_MINOR_CODE_DESC,\n\n\n\n\nTRIM(f0005_08.drdl01) AS MATL_GRP_DESC,\n\nf4101_adt.imitm AS SHRT_MATL_NUM,\n\n\n\n\n\nFROM {Config.sourceDatabase}.f4101_adt f4101_adt\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_05\nON F4101_ADT.IMPRP0 = TRIM(f0005_05.DRKY)\nAND TRIM(f0005_05.DRSY) = '41'\nAND f0005_05.DRRT = '05'\nAND f0005_05._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_s1 \nON F4101_ADT.IMSRP1 = TRIM(f0005_s1.DRKY) \nAND TRIM(f0005_s1.DRSY) = '41'\nAND f0005_s1.DRRT = 'S1'\nAND f0005_s1._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_10\nON F4101_ADT.IMSRP0 = TRIM(f0005_10.DRKY) \nAND TRIM(f0005_10.DRSY) = '41'\nAND f0005_10.DRRT = '10'\nAND f0005_10._deleted_ = 'F'\nLEFT JOIN {Config.sourceDatabase}.f0005 f0005_08\nON F4101_ADT.IMSRP8 = TRIM(f0005_08.DRKY) \nAND TRIM(f0005_08.DRSY) = '41'\nAND f0005_08.DRRT = '08'\nAND f0005_08._deleted_ = 'F'\nWHERE  f4101_adt._deleted_ = 'F'  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    