{
      "metainfo" : {
        "id" : "1",
        "language" : "python",
        "fabricId" : "32",
        "frontEndLanguage" : "sql",
        "mode" : "batch",
        "udfs" : {
          "language" : "python",
          "udfs" : [ ]
        },
        "udafs" : {
          "language" : "python",
          "code" : ""
        },
        "configuration" : {
          "common" : {
            "type" : "record",
            "fields" : [ {
              "name" : "targetSchema",
              "kind" : {
                "type" : "string",
                "value" : "dev_md_l1"
              },
              "optional" : false
            }, {
              "name" : "sourceSystem",
              "kind" : {
                "type" : "string",
                "value" : "mbp"
              },
              "optional" : false
            }, {
              "name" : "sourceDatabase",
              "kind" : {
                "type" : "string",
                "value" : "mbp"
              },
              "optional" : false
            }, {
              "name" : "MANDT",
              "kind" : {
                "type" : "string",
                "value" : ""
              },
              "optional" : true
            }, {
              "name" : "DAI_ETL_ID",
              "kind" : {
                "type" : "int",
                "value" : "0"
              },
              "optional" : false
            } ]
          },
          "oldCommon" : {
            "type" : "record",
            "fields" : [ ]
          },
          "fabrics" : { },
          "instances" : { },
          "selected" : "default",
          "nonEditable" : [ ],
          "isSubscribedPipelineWithPipelineConfigs" : false
        },
        "sparkConf" : [ ],
        "hadoopConf" : [ ],
        "codeMode" : "sparse",
        "buildSystem" : "maven",
        "externalDependencies" : [ ],
        "isImported" : false,
        "interimMode" : "Full",
        "interimModeEnabled" : true,
        "visualCodeInterimMode" : "Disabled",
        "recordsLimit" : {
          "enabled" : false,
          "value" : 1000
        },
        "topLevelPackage" : "MD_PRCH_DELV_CNFRMS_1"
      },
      "connections" : [ {
        "id" : "294f9c68-3be9-4628-a184-c055425192e2",
        "source" : "fe54fe83-c780-4f47-be90-8b937ba997c2",
        "sourcePort" : "5bc56f27-3d85-437b-a584-c601b3e73fbf",
        "target" : "46081ddd-716b-4f59-8ee8-04b5ac623b19",
        "targetPort" : "8c6343e8-aac2-4a59-95fc-2beef7154849"
      }, {
        "id" : "45539ac7-e83a-4a6f-908c-cd1a3dd57b69",
        "source" : "57b0768f-4a96-427e-9e15-cb83361467ea",
        "sourcePort" : "1be31457-b1d2-4aac-b71f-79c5b8731fec",
        "target" : "fe54fe83-c780-4f47-be90-8b937ba997c2",
        "targetPort" : "806a8f22-3066-4e16-8298-dc76af9b497c"
      } ],
      "processes" : {
        "46081ddd-716b-4f59-8ee8-04b5ac623b19" : {
          "id" : "46081ddd-716b-4f59-8ee8-04b5ac623b19",
          "component" : "Target",
          "metadata" : {
            "label" : "MD_PRCH_DELV_CNFRMS",
            "slug" : "MD_PRCH_DELV_CNFRMS",
            "x" : -540,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "8c6343e8-aac2-4a59-95fc-2beef7154849",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "datasetId" : "datasets/MD_PRCH_DELV_CNFRMS"
          }
        },
        "fe54fe83-c780-4f47-be90-8b937ba997c2" : {
          "id" : "fe54fe83-c780-4f47-be90-8b937ba997c2",
          "component" : "SchemaTransform",
          "metadata" : {
            "label" : "addL1fields",
            "slug" : "addL1fields",
            "x" : -780,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ {
              "id" : "806a8f22-3066-4e16-8298-dc76af9b497c",
              "slug" : "in0",
              "isStreaming" : false
            } ],
            "outputs" : [ {
              "id" : "5bc56f27-3d85-437b-a584-c601b3e73fbf",
              "slug" : "out",
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : false
          },
          "properties" : {
            "columnsSelector" : [ ],
            "transformations" : [ {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "SRC_SYS_CD",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$sourceSystem'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_pk_md5_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "md5(to_json(named_struct('SRC_SYS_CD',SRC_SYS_CD,'PO_NUM',PO_NUM,'PO_LINE_NBR',PO_LINE_NBR,'CNFRM_SEQ_NBR',CNFRM_SEQ_NBR,'CNFRM_CAT_CD',CNFRM_CAT_CD,'CO_CD',CO_CD,'ORDER_SUF',ORDER_SUF)))"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }, {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "_l1_upt_",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },
            {
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_ETL_ID",
                "expression" : {
                  "format" : "sql",
                  "expression" : "'$DAI_ETL_ID'"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },{
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_CRT_DTTM",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            },{
              "kind" : "AddReplaceColumn",
              "AddReplaceColumn" : {
                "sourceColumn" : "DAI_UPDT_DTTM",
                "expression" : {
                  "format" : "sql",
                  "expression" : "current_timestamp()"
                }
              },
              "DropColumn" : {
                "sourceColumn" : ""
              },
              "RenameColumn" : {
                "sourceColumn" : "",
                "targetColumn" : ""
              }
            }
            ]
          }
        },
        "57b0768f-4a96-427e-9e15-cb83361467ea" : {
          "id" : "57b0768f-4a96-427e-9e15-cb83361467ea",
          "component" : "Script",
          "metadata" : {
            "label" : "sql_MD_PRCH_DELV_CNFRMS",
            "slug" : "sql_MD_PRCH_DELV_CNFRMS",
            "x" : -1060,
            "y" : -400,
            "phase" : 0,
            "cache" : false,
            "detailedStats" : false,
            "isImported" : false
          },
          "ports" : {
            "inputs" : [ ],
            "outputs" : [ {
              "id" : "1be31457-b1d2-4aac-b71f-79c5b8731fec",
              "slug" : "out0",
              "schema" : {
                "type" : "struct",
                "fields" : [ {
                  "name" : "_deleted_",
                  "type" : "string",
                  "nullable" : true,
                  "metadata" : {
                    "description" : "",
                    "mappings" : [ ],
                    "tags" : [ ]
                  } 
                } ]
              },
              "isStreaming" : false
            } ],
            "selectedInputFields" : [ ],
            "isCustomOutputSchema" : true
          },
          "properties" : {
            "script" : "out0 = spark.sql(f\"\"\"\n    SELECT\n'{Config.sourceSystem}' AS SRC_SYS_CD\n, TRIM(ekes.ebeln) as PO_NUM\n, TRIM(ekes.ebelp) as PO_LINE_NBR\n, CAST(TRIM(ekes.etens) AS INT) as CNFRM_SEQ_NBR\n, TRIM(ekes.ebtyp) as CNFRM_CAT_CD\n, case when Trim(ekes.eindt) = '00000000' then CAST(NULL AS timestamp)\nelse to_timestamp(Trim(ekes.eindt),\\\"yyyyMMdd\\\") end as DELV_DTTM\n, case when Trim(ekes.erdat) = '00000000' then CAST(NULL AS timestamp)\nelse to_timestamp(Trim(ekes.erdat),\\\"yyyyMMdd\\\") end as CRT_ON_DTTM\n, CAST(TRIM(ekes.menge) AS decimal(18,4)) as CNFRM_QTY\n, CAST(TRIM(ekes.dabmg) AS decimal(18,4)) as MRP_ADJ_QTY\n, TRIM(ekes.vbeln) as SLS_ORDR_NUM\n, TRIM(ekes.vbelp) as SLS_ORDR_LINE_NBR\n, TRIM(ekes.charg) as VEND_BTCH_NUM\n, NULL as REF_DOC_NUM\n, \\\"#\\\" as CO_CD\n, \\\"#\\\" as ORDER_SUF\n, TRIM(ekes.lpein) as DT_CAT_OF_DELV_DT_SUP_CNFRM\n, TRIM(ekes.estkz) as CRT_IN_SUP_CNFRM\n, TRIM(ekes.loekz) as SUP_CNFRM_DEL_IN\n, TRIM(ekes.kzdis) as CNFRM_RLVNT_TO_MATL_PLNG\n, TRIM(ekes.mprof) as MFR_PART_PRFL\n, TRIM(ekes.ematn) as MATL_NUM_CRSPN_TO_MFR_PART_NUM\n, CAST(TRIM(ekes.mahnz) AS decimal(18,4)) as NUM_OF_RMNDR\n, TRIM(ekes.uecha) as HI_LVL_ITM_OF_BTCH_SPLT_ITM\n, TRIM(ekes.ref_etens) as SEQ_NUM_OF_SUP_CNFRM\n, TRIM(ekes.imwrk) as DELV_HAS_STS_IN_PLNT\n, NULL as DELV\n, NULL as DELV_ITM\n, NULL as HANDOVR_DTTM\n, NULL as STK_SGMNT\n, NULL as UTC_TMST\n, NULL as QTY_OF_ORDR_CNFRM\n, NULL as MRP_REDUC_QTY\n, NULL as PER_OF_PERF_STRT_DTTM\n, NULL as PER_OF_PERF_END_DTTM\n, NULL as SRVC_PERFMR\n, NULL as EXPTD_VAL_OF_OVRL_LMT\n, NULL as SUP_CNFRM_NUM\n, NULL as SUP_CNFRM_ITM\n, NULL as ALC_STK_QTY\n, NULL as ORIG_QTY_OF_SHIPPING_NTF\n, NULL as REF_UUID_OF_TRSPN_MGMT\nFROM\n  {Config.sourceDatabase}.ekes ekes\nWHERE\n  ekes._deleted_ = 'F'\n  AND ekes.mandt = '600'\n  \n \n\"\"\")",
            "scriptMethodHeader" : "def Script(spark: SparkSession) -> DataFrame:",
            "scriptMethodFooter" : "    return out0"
          }
        }
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false
      }
    }


    